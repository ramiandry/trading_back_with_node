{
  "openapi": "3.0.0",
  "paths": {
    "/brand-api/v1/users/details": {
      "post": {
        "operationId": "UsersController_getUserDetails",
        "summary": "",
        "description": "Get user details.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "string",
                        "description": "The ID of the user. (UUID)",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                      }
                    },
                    "required": [
                      "userId"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "Email of the user. Use lowercase email for consistency.",
                        "example": "john.doe@tradelocker.com"
                      }
                    },
                    "required": [
                      "email"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the user. UUID",
                      "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "email": {
                      "type": "string",
                      "description": "Email of the user.",
                      "example": "john.doe@tradelocker.com"
                    },
                    "firstName": {
                      "type": "string",
                      "description": "Name of the user.",
                      "example": "John"
                    },
                    "lastName": {
                      "type": "string",
                      "description": "Surname of the user.",
                      "example": "Doe"
                    },
                    "server": {
                      "type": "string",
                      "description": "The server field for TradeLocker login.",
                      "example": "FXBR",
                      "maximum": 8
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string",
                      "deprecated": true,
                      "description": "Date and time when the user was created.",
                      "example": "2020-01-01T00:00:00.000Z"
                    },
                    "createdDateTime": {
                      "type": "string",
                      "description": "Date and time when the user was created.",
                      "example": "2020-01-01T00:00:00.000Z"
                    }
                  },
                  "required": [
                    "id",
                    "email",
                    "firstName",
                    "lastName",
                    "server",
                    "createdAt",
                    "createdDateTime"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/brand-api/v1/users/check-by-email": {
      "post": {
        "operationId": "UsersController_getUsersByEmail",
        "summary": "",
        "description": "Check if user email already exists.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Email of the user. Use lowercase email for consistency.",
                    "example": "john.doe@tradelocker.com"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns userId if user exists.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "userId": {
                      "type": "string",
                      "description": "The ID of the user. (UUID)",
                      "format": "uuid",
                      "example": "550e8400-e29b-41d4-a716-446655440000"
                    }
                  },
                  "required": [
                    "userId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/brand-api/v1/users/all": {
      "post": {
        "operationId": "UsersController_getUsersByBrandId",
        "summary": "",
        "description": "Get details for all users. \nOffset and limit are optional parameters.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "offset": {
                    "type": "number",
                    "description": "Offset the results by specified number.",
                    "format": "int32",
                    "example": 2000,
                    "minimum": 0,
                    "default": 0
                  },
                  "limit": {
                    "type": "number",
                    "description": "Limit the number of return results.",
                    "format": "int32",
                    "example": 1000,
                    "minimum": 1,
                    "maximum": 100000,
                    "default": 10000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the user. UUID",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                          },
                          "email": {
                            "type": "string",
                            "description": "Email of the user.",
                            "example": "john.doe@tradelocker.com"
                          },
                          "firstName": {
                            "type": "string",
                            "description": "Name of the user.",
                            "example": "John"
                          },
                          "lastName": {
                            "type": "string",
                            "description": "Surname of the user.",
                            "example": "Doe"
                          },
                          "server": {
                            "type": "string",
                            "description": "The server field for TradeLocker login.",
                            "example": "FXBR",
                            "maximum": 8
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string",
                            "deprecated": true,
                            "description": "Date and time when the user was created.",
                            "example": "2020-01-01T00:00:00.000Z"
                          },
                          "createdDateTime": {
                            "type": "string",
                            "description": "Date and time when the user was created.",
                            "example": "2020-01-01T00:00:00.000Z"
                          }
                        },
                        "required": [
                          "id",
                          "email",
                          "firstName",
                          "lastName",
                          "server",
                          "createdAt",
                          "createdDateTime"
                        ]
                      }
                    },
                    "hasMore": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "data",
                    "hasMore"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/brand-api/v1/users/create": {
      "post": {
        "operationId": "UsersController_createUser",
        "summary": "",
        "description": "Create a user in TradeLocker system.",
        "parameters": [
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "Idempotency key (must be a valid UUID)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Email of the user. Use lowercase email for consistency.",
                    "example": "john.doe@tradelocker.com"
                  },
                  "firstName": {
                    "type": "string",
                    "description": "Name of the user (optional).",
                    "example": "John"
                  },
                  "lastName": {
                    "type": "string",
                    "description": "Last name of the user (optional).",
                    "example": "Doe"
                  },
                  "password": {
                    "type": "string",
                    "description": "Desired password. Must be 6 characters long, contain at least one number, one special character and have a mixture of uppercase and lowercase letters",
                    "example": "p@ssW0rd1"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "userId": {
                      "type": "string",
                      "description": "The ID of the user. (UUID)",
                      "format": "uuid",
                      "example": "550e8400-e29b-41d4-a716-446655440000"
                    }
                  },
                  "required": [
                    "userId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "default": {
            "headers": {
              "Idempotent-Replayed": {
                "schema": {
                  "type": "boolean"
                },
                "description": "Header that will be returned if the response was served from idempotency cache (initial execution response)",
                "required": false
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/brand-api/v1/users/set-password": {
      "post": {
        "operationId": "UsersController_setPassword",
        "summary": "",
        "description": "Set new password for selected user Id.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "description": "The ID of the user. (UUID)",
                    "format": "uuid",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                  },
                  "password": {
                    "type": "string",
                    "description": "Desired password. Must be 6 characters long, contain at least one number, one special character and have a mixture of uppercase and lowercase letters",
                    "example": "p@ssW0rd1"
                  }
                },
                "required": [
                  "userId",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New password set successfully."
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/brand-api/v1/users/set-email": {
      "post": {
        "operationId": "UsersController_setEmail",
        "summary": "",
        "description": "Set new email for selected user Id.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "description": "The ID of the user. (UUID)",
                    "format": "uuid",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                  },
                  "email": {
                    "type": "string",
                    "description": "Email of the user. Use lowercase email for consistency.",
                    "example": "john.doe@tradelocker.com"
                  }
                },
                "required": [
                  "userId",
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New email set successfully."
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/brand-api/v1/accounts/all": {
      "post": {
        "operationId": "AccountController_getAccounts",
        "summary": "",
        "description": "Get all accounts for a user.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "description": "The ID of the user. (UUID)",
                    "format": "uuid",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                  }
                },
                "required": [
                  "userId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "accountName": {
                            "type": "string",
                            "description": "The name of the account.",
                            "example": "Main Account"
                          },
                          "accountId": {
                            "type": "string",
                            "description": "Account ID.",
                            "pattern": "^[LD]#[0-9]+$",
                            "example": "L#617289"
                          },
                          "userId": {
                            "type": "string",
                            "description": "The ID of the user. (UUID)",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                          },
                          "userGroupId": {
                            "type": "string",
                            "description": "User group ID of the account.",
                            "example": "618566"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the account to create.",
                            "enum": [
                              "LIVE",
                              "DEMO"
                            ],
                            "example": "LIVE"
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of the account. If ACTIVE, trading could be disabled by a risk rule. Check the 'tradingDisabledReason' property.",
                            "enum": [
                              "ACTIVE",
                              "RESTRICTED",
                              "SUSPENDED"
                            ],
                            "example": "ACTIVE"
                          },
                          "tradingDisabledReason": {
                            "description": "The reason for trading being disabled. If null, trading is enabled.",
                            "nullable": true,
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "Reason for trading being disabled.",
                                    "enum": [
                                      "RISK_RULE"
                                    ],
                                    "example": "RISK_RULE"
                                  }
                                },
                                "required": [
                                  "type"
                                ]
                              }
                            ]
                          },
                          "currency": {
                            "type": "string",
                            "description": "3 letter ISO 4217 code of the currency or ticker symbol for crypto asset of this account.",
                            "example": "USD",
                            "minLength": 3,
                            "maxLength": 10
                          },
                          "leverage": {
                            "type": "string",
                            "description": "Leverage for the account.",
                            "enum": [
                              "50",
                              "100",
                              "200",
                              "300",
                              "400",
                              "500"
                            ],
                            "example": "100"
                          },
                          "balance": {
                            "type": "string",
                            "description": "Current account balance.",
                            "example": "3905.10"
                          },
                          "blockedBalance": {
                            "type": "string",
                            "description": "Current account blocked balance.",
                            "example": "500.00"
                          },
                          "credit": {
                            "type": "string",
                            "description": "Current account credit.",
                            "example": "1000.00"
                          },
                          "equity": {
                            "type": "string",
                            "description": "Current account equity.",
                            "example": "700.00"
                          },
                          "pnl": {
                            "type": "string",
                            "description": "Current account pnl.",
                            "example": "100.00"
                          },
                          "marginAvailable": {
                            "type": "string",
                            "description": "Current account margin available.",
                            "example": "2000.00"
                          },
                          "marginUsed": {
                            "type": "string",
                            "description": "Current account margin used.",
                            "example": "1800.00"
                          },
                          "createdDateTime": {
                            "type": "string",
                            "description": "Date and time when the account was created.",
                            "example": "2020-01-01T00:00:00.000Z"
                          }
                        },
                        "required": [
                          "accountName",
                          "accountId",
                          "userId",
                          "userGroupId",
                          "type",
                          "status",
                          "tradingDisabledReason",
                          "currency",
                          "balance",
                          "blockedBalance",
                          "credit",
                          "equity",
                          "pnl",
                          "marginAvailable",
                          "marginUsed",
                          "createdDateTime"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Accounts"
        ]
      }
    },
    "/brand-api/v1/accounts/details": {
      "post": {
        "operationId": "AccountController_getAccountDetails",
        "summary": "",
        "description": "Get single account details.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accountId": {
                    "type": "string",
                    "description": "Account ID.",
                    "pattern": "^[LD]#[0-9]+$",
                    "example": "L#617289"
                  }
                },
                "required": [
                  "accountId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accountName": {
                      "type": "string",
                      "description": "The name of the account.",
                      "example": "Main Account"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Account ID.",
                      "pattern": "^[LD]#[0-9]+$",
                      "example": "L#617289"
                    },
                    "userId": {
                      "type": "string",
                      "description": "The ID of the user. (UUID)",
                      "format": "uuid",
                      "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "userGroupId": {
                      "type": "string",
                      "description": "User group ID of the account.",
                      "example": "618566"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the account to create.",
                      "enum": [
                        "LIVE",
                        "DEMO"
                      ],
                      "example": "LIVE"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the account. If ACTIVE, trading could be disabled by a risk rule. Check the 'tradingDisabledReason' property.",
                      "enum": [
                        "ACTIVE",
                        "RESTRICTED",
                        "SUSPENDED"
                      ],
                      "example": "ACTIVE"
                    },
                    "tradingDisabledReason": {
                      "description": "The reason for trading being disabled. If null, trading is enabled.",
                      "nullable": true,
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "Reason for trading being disabled.",
                              "enum": [
                                "RISK_RULE"
                              ],
                              "example": "RISK_RULE"
                            }
                          },
                          "required": [
                            "type"
                          ]
                        }
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "description": "3 letter ISO 4217 code of the currency or ticker symbol for crypto asset of this account.",
                      "example": "USD",
                      "minLength": 3,
                      "maxLength": 10
                    },
                    "leverage": {
                      "type": "string",
                      "description": "Leverage for the account.",
                      "enum": [
                        "50",
                        "100",
                        "200",
                        "300",
                        "400",
                        "500"
                      ],
                      "example": "100"
                    },
                    "balance": {
                      "type": "string",
                      "description": "Current account balance.",
                      "example": "3905.10"
                    },
                    "blockedBalance": {
                      "type": "string",
                      "description": "Current account blocked balance.",
                      "example": "500.00"
                    },
                    "credit": {
                      "type": "string",
                      "description": "Current account credit.",
                      "example": "1000.00"
                    },
                    "equity": {
                      "type": "string",
                      "description": "Current account equity.",
                      "example": "700.00"
                    },
                    "pnl": {
                      "type": "string",
                      "description": "Current account pnl.",
                      "example": "100.00"
                    },
                    "marginAvailable": {
                      "type": "string",
                      "description": "Current account margin available.",
                      "example": "2000.00"
                    },
                    "marginUsed": {
                      "type": "string",
                      "description": "Current account margin used.",
                      "example": "1800.00"
                    },
                    "createdDateTime": {
                      "type": "string",
                      "description": "Date and time when the account was created.",
                      "example": "2020-01-01T00:00:00.000Z"
                    }
                  },
                  "required": [
                    "accountName",
                    "accountId",
                    "userId",
                    "userGroupId",
                    "type",
                    "status",
                    "tradingDisabledReason",
                    "currency",
                    "balance",
                    "blockedBalance",
                    "credit",
                    "equity",
                    "pnl",
                    "marginAvailable",
                    "marginUsed",
                    "createdDateTime"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Accounts"
        ]
      }
    },
    "/brand-api/v1/accounts/brand": {
      "post": {
        "operationId": "AccountController_getAllAccountsForBrand",
        "summary": "",
        "description": "Get all accounts for a brand. \nOffset and limit are optional parameters.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "offset": {
                    "type": "number",
                    "description": "Offset the results by specified number.",
                    "format": "int32",
                    "example": 2000,
                    "minimum": 0,
                    "default": 0
                  },
                  "limit": {
                    "type": "number",
                    "description": "Limit the number of return results.",
                    "format": "int32",
                    "example": 1000,
                    "minimum": 1,
                    "maximum": 100000,
                    "default": 10000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "accountName": {
                            "type": "string",
                            "description": "The name of the account.",
                            "example": "Main Account"
                          },
                          "accountId": {
                            "type": "string",
                            "description": "Account ID.",
                            "pattern": "^[LD]#[0-9]+$",
                            "example": "L#617289"
                          },
                          "userId": {
                            "type": "string",
                            "description": "The ID of the user. (UUID)",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the account to create.",
                            "enum": [
                              "LIVE",
                              "DEMO"
                            ],
                            "example": "LIVE"
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of the account.",
                            "enum": [
                              "ACTIVE",
                              "RESTRICTED",
                              "SUSPENDED"
                            ],
                            "example": "ACTIVE"
                          }
                        },
                        "required": [
                          "accountName",
                          "accountId",
                          "userId",
                          "type",
                          "status"
                        ]
                      }
                    },
                    "hasMore": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "data",
                    "hasMore"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Accounts"
        ]
      }
    },
    "/brand-api/v1/accounts/create": {
      "post": {
        "operationId": "AccountController_createAccount",
        "summary": "",
        "description": "Create a new Tradelocker account for specified user.",
        "parameters": [
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "Idempotency key (must be a valid UUID)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "description": "The ID of the user. (UUID)",
                    "format": "uuid",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                  },
                  "accountName": {
                    "type": "string",
                    "description": "The name of the account.",
                    "example": "Main Account"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the account to create.",
                    "enum": [
                      "LIVE",
                      "DEMO"
                    ],
                    "example": "LIVE"
                  },
                  "currency": {
                    "type": "string",
                    "description": "3 letter ISO 4217 code of the currency or ticker symbol for crypto asset of this account.",
                    "example": "USD",
                    "minLength": 3,
                    "maxLength": 10
                  },
                  "groupId": {
                    "type": "string",
                    "description": "ID of the group to place the account into. If not provided, placed into brand's default group.",
                    "example": "27495"
                  }
                },
                "required": [
                  "userId",
                  "accountName",
                  "type",
                  "currency"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accountName": {
                      "type": "string",
                      "description": "The name of the account.",
                      "example": "Main Account"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Account ID.",
                      "pattern": "^[LD]#[0-9]+$",
                      "example": "L#617289"
                    },
                    "userId": {
                      "type": "string",
                      "description": "The ID of the user. (UUID)",
                      "format": "uuid",
                      "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "userGroupId": {
                      "type": "string",
                      "description": "User group ID of the account.",
                      "example": "618566"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the account to create.",
                      "enum": [
                        "LIVE",
                        "DEMO"
                      ],
                      "example": "LIVE"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the account. If ACTIVE, trading could be disabled by a risk rule. Check the 'tradingDisabledReason' property.",
                      "enum": [
                        "ACTIVE",
                        "RESTRICTED",
                        "SUSPENDED"
                      ],
                      "example": "ACTIVE"
                    },
                    "tradingDisabledReason": {
                      "description": "The reason for trading being disabled. If null, trading is enabled.",
                      "nullable": true,
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "Reason for trading being disabled.",
                              "enum": [
                                "RISK_RULE"
                              ],
                              "example": "RISK_RULE"
                            }
                          },
                          "required": [
                            "type"
                          ]
                        }
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "description": "3 letter ISO 4217 code of the currency or ticker symbol for crypto asset of this account.",
                      "example": "USD",
                      "minLength": 3,
                      "maxLength": 10
                    },
                    "leverage": {
                      "type": "string",
                      "description": "Leverage for the account.",
                      "enum": [
                        "50",
                        "100",
                        "200",
                        "300",
                        "400",
                        "500"
                      ],
                      "example": "100"
                    },
                    "balance": {
                      "type": "string",
                      "description": "Current account balance.",
                      "example": "3905.10"
                    },
                    "blockedBalance": {
                      "type": "string",
                      "description": "Current account blocked balance.",
                      "example": "500.00"
                    },
                    "credit": {
                      "type": "string",
                      "description": "Current account credit.",
                      "example": "1000.00"
                    },
                    "equity": {
                      "type": "string",
                      "description": "Current account equity.",
                      "example": "700.00"
                    },
                    "pnl": {
                      "type": "string",
                      "description": "Current account pnl.",
                      "example": "100.00"
                    },
                    "marginAvailable": {
                      "type": "string",
                      "description": "Current account margin available.",
                      "example": "2000.00"
                    },
                    "marginUsed": {
                      "type": "string",
                      "description": "Current account margin used.",
                      "example": "1800.00"
                    },
                    "createdDateTime": {
                      "type": "string",
                      "description": "Date and time when the account was created.",
                      "example": "2020-01-01T00:00:00.000Z"
                    }
                  },
                  "required": [
                    "accountName",
                    "accountId",
                    "userId",
                    "userGroupId",
                    "type",
                    "status",
                    "tradingDisabledReason",
                    "currency",
                    "balance",
                    "blockedBalance",
                    "credit",
                    "equity",
                    "pnl",
                    "marginAvailable",
                    "marginUsed",
                    "createdDateTime"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "default": {
            "headers": {
              "Idempotent-Replayed": {
                "schema": {
                  "type": "boolean"
                },
                "description": "Header that will be returned if the response was served from idempotency cache (initial execution response)",
                "required": false
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Accounts"
        ]
      }
    },
    "/brand-api/v1/accounts/activate": {
      "put": {
        "operationId": "AccountController_activateAccount",
        "summary": "",
        "description": "Activate an existing TradeLocker account.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accountId": {
                    "type": "string",
                    "description": "Account ID.",
                    "pattern": "^[LD]#[0-9]+$",
                    "example": "L#617289"
                  }
                },
                "required": [
                  "accountId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accountId": {
                      "type": "string",
                      "description": "Account ID.",
                      "pattern": "^[LD]#[0-9]+$",
                      "example": "L#617289"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the account.",
                      "enum": [
                        "ACTIVE",
                        "RESTRICTED",
                        "SUSPENDED"
                      ],
                      "example": "ACTIVE"
                    }
                  },
                  "required": [
                    "accountId",
                    "status"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Accounts"
        ]
      }
    },
    "/brand-api/v1/accounts/restrict": {
      "put": {
        "operationId": "AccountController_restrictAccount",
        "summary": "",
        "description": "Restricts an existing TradeLocker account. Restricted accounts cannot open positions.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accountId": {
                    "type": "string",
                    "description": "Account ID.",
                    "pattern": "^[LD]#[0-9]+$",
                    "example": "L#617289"
                  }
                },
                "required": [
                  "accountId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accountId": {
                      "type": "string",
                      "description": "Account ID.",
                      "pattern": "^[LD]#[0-9]+$",
                      "example": "L#617289"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the account.",
                      "enum": [
                        "ACTIVE",
                        "RESTRICTED",
                        "SUSPENDED"
                      ],
                      "example": "ACTIVE"
                    }
                  },
                  "required": [
                    "accountId",
                    "status"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Accounts"
        ]
      }
    },
    "/brand-api/v1/accounts/suspend": {
      "put": {
        "operationId": "AccountController_suspendAccount",
        "summary": "",
        "description": "Suspend an existing TradeLocker account. Trading is prohibited for suspended accounts and they do not show up in the TradeLocker application.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accountId": {
                    "type": "string",
                    "description": "Account ID.",
                    "pattern": "^[LD]#[0-9]+$",
                    "example": "L#617289"
                  }
                },
                "required": [
                  "accountId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accountId": {
                      "type": "string",
                      "description": "Account ID.",
                      "pattern": "^[LD]#[0-9]+$",
                      "example": "L#617289"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the account.",
                      "enum": [
                        "ACTIVE",
                        "RESTRICTED",
                        "SUSPENDED"
                      ],
                      "example": "ACTIVE"
                    }
                  },
                  "required": [
                    "accountId",
                    "status"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Accounts"
        ]
      }
    },
    "/brand-api/v1/accounts/set-group": {
      "put": {
        "operationId": "AccountController_changeUserGroup",
        "summary": "",
        "description": "Set new group for specified account.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accountId": {
                    "type": "string",
                    "description": "Account ID.",
                    "pattern": "^[LD]#[0-9]+$",
                    "example": "L#617289"
                  },
                  "newGroupId": {
                    "type": "string",
                    "description": "ID of the new group for the account.",
                    "example": "621106"
                  }
                },
                "required": [
                  "accountId",
                  "newGroupId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account group changed successfully."
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Accounts"
        ]
      }
    },
    "/brand-api/v1/accounts/close-all-positions": {
      "post": {
        "operationId": "AccountController_closeAllPositions",
        "summary": "",
        "description": "Order closing of all positions for specified account.\n After submitting a request, call open positions endpoint to ensure that all positions were closed successfully.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accountId": {
                    "type": "string",
                    "description": "Account ID.",
                    "pattern": "^[LD]#[0-9]+$",
                    "example": "L#617289"
                  }
                },
                "required": [
                  "accountId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order to close all positions sent successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "positionIdsOrderedToBeClosed": {
                      "type": "array",
                      "description": "A list of positionIds which were ordered to be closed. To make sure they were closed - call `/positions/get-open-positions` for this accountId",
                      "items": {
                        "type": "string",
                        "example": "72057594038949120"
                      }
                    }
                  },
                  "required": [
                    "positionIdsOrderedToBeClosed"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Accounts"
        ]
      }
    },
    "/brand-api/v1/accounts/cancel-all-orders": {
      "post": {
        "operationId": "AccountController_cancelAllOrders",
        "summary": "",
        "description": "Cancel all orders for specified account.\n After submitting a request, call all orders endpoint to ensure that all orders were closed successfully.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accountId": {
                    "type": "string",
                    "description": "Account ID.",
                    "pattern": "^[LD]#[0-9]+$",
                    "example": "L#617289"
                  }
                },
                "required": [
                  "accountId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order to cancel all orders sent successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "orderIdsOrderedToBeCanceled": {
                      "type": "array",
                      "description": "A list of orderIds which were ordered to be canceled. To make sure they were canceled - call `/orders/all` for this accountId",
                      "items": {
                        "type": "string",
                        "example": "72057594038949120"
                      }
                    },
                    "orderIdsFailedToCancel": {
                      "type": "array",
                      "description": "A list of orderIds whose cancellation has failed. To check if the system is in a consistent state - call `/orders/all` for this accountId.",
                      "items": {
                        "type": "string",
                        "example": "72057594038949121"
                      }
                    }
                  },
                  "required": [
                    "orderIdsOrderedToBeCanceled",
                    "orderIdsFailedToCancel"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Accounts"
        ]
      }
    },
    "/brand-api/v1/account-operations/deposit": {
      "post": {
        "operationId": "AccountOperationsController_depositToAccount",
        "summary": "",
        "description": "Deposit funds to specified account of a user. The ID of the resulting operation is not unique across account types (LIVE,DEMO).",
        "parameters": [
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "Idempotency key (must be a valid UUID)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accountId": {
                    "type": "string",
                    "description": "Account ID.",
                    "pattern": "^[LD]#[0-9]+$",
                    "example": "L#617289"
                  },
                  "amount": {
                    "type": "string",
                    "description": "Amount of the operation. Must be positive.",
                    "example": "100.20"
                  },
                  "note": {
                    "type": "string",
                    "description": "Account operation note.",
                    "maxLength": 255,
                    "example": "Internal Transfer"
                  }
                },
                "required": [
                  "accountId",
                  "amount"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Funds deposited successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "operationId": {
                      "type": "string",
                      "description": "Account operation ID",
                      "example": "72057594039577496"
                    }
                  },
                  "required": [
                    "operationId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "default": {
            "headers": {
              "Idempotent-Replayed": {
                "schema": {
                  "type": "boolean"
                },
                "description": "Header that will be returned if the response was served from idempotency cache (initial execution response)",
                "required": false
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Account operations"
        ]
      }
    },
    "/brand-api/v1/account-operations/withdraw": {
      "post": {
        "operationId": "AccountOperationsController_withdrawFromAccount",
        "summary": "",
        "description": "Withdraw funds from specified account of a user. The ID of the resulting operation is not unique across account types (LIVE,DEMO).",
        "parameters": [
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "Idempotency key (must be a valid UUID)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accountId": {
                    "type": "string",
                    "description": "Account ID.",
                    "pattern": "^[LD]#[0-9]+$",
                    "example": "L#617289"
                  },
                  "amount": {
                    "type": "string",
                    "description": "Amount of the operation. Must be positive.",
                    "example": "100.20"
                  },
                  "note": {
                    "type": "string",
                    "description": "Account operation note.",
                    "maxLength": 255,
                    "example": "Internal Transfer"
                  }
                },
                "required": [
                  "accountId",
                  "amount"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Funds withdrawn successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "operationId": {
                      "type": "string",
                      "description": "Account operation ID",
                      "example": "72057594039577496"
                    }
                  },
                  "required": [
                    "operationId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "default": {
            "headers": {
              "Idempotent-Replayed": {
                "schema": {
                  "type": "boolean"
                },
                "description": "Header that will be returned if the response was served from idempotency cache (initial execution response)",
                "required": false
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Account operations"
        ]
      }
    },
    "/brand-api/v1/account-operations/credit": {
      "post": {
        "operationId": "AccountOperationsController_addCreditToAccount",
        "summary": "",
        "description": "Add or remove credit to specified account of a user. The ID of the resulting operation is not unique across account types (LIVE,DEMO).",
        "parameters": [
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "Idempotency key (must be a valid UUID)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accountId": {
                    "type": "string",
                    "description": "Account ID.",
                    "pattern": "^[LD]#[0-9]+$",
                    "example": "L#617289"
                  },
                  "amount": {
                    "type": "string",
                    "description": "Amount of the operation. Positive to add, negative to subtract.",
                    "example": "100.20"
                  },
                  "note": {
                    "type": "string",
                    "description": "Account operation note.",
                    "maxLength": 255,
                    "example": "Internal Transfer"
                  }
                },
                "required": [
                  "accountId",
                  "amount"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Credit updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "operationId": {
                      "type": "string",
                      "description": "Account operation ID",
                      "example": "72057594039577496"
                    }
                  },
                  "required": [
                    "operationId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "default": {
            "headers": {
              "Idempotent-Replayed": {
                "schema": {
                  "type": "boolean"
                },
                "description": "Header that will be returned if the response was served from idempotency cache (initial execution response)",
                "required": false
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Account operations"
        ]
      }
    },
    "/brand-api": {
      "get": {
        "operationId": "HomeController_appInfo",
        "summary": "",
        "description": "Default API route with basic service information.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "API information"
          }
        },
        "tags": [
          "Default"
        ]
      }
    },
    "/brand-api/alive": {
      "get": {
        "operationId": "HomeController_alive",
        "summary": "",
        "description": "API liveness check",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns 1 if API is alive",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              }
            }
          }
        },
        "tags": [
          "Default"
        ]
      }
    },
    "/brand-api/ready": {
      "get": {
        "operationId": "HomeController_readonly",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The Health Check is successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {},
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The Health Check is not successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        },
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Default"
        ]
      }
    },
    "/brand-api/v1/brand/instruments": {
      "post": {
        "operationId": "BrandController_getInstruments",
        "summary": "",
        "description": "Get all instruments for account type.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Type of the account environment to fetch for.",
                    "enum": [
                      "LIVE",
                      "DEMO"
                    ],
                    "example": "LIVE"
                  }
                },
                "required": [
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the instrument.",
                            "example": "ADAUSD"
                          },
                          "lotSize": {
                            "type": "number",
                            "description": "Lot size for the instrument.",
                            "example": 100
                          }
                        },
                        "required": [
                          "name",
                          "lotSize"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Brands"
        ]
      }
    },
    "/brand-api/v1/brand/assets": {
      "post": {
        "operationId": "BrandController_getAssets",
        "summary": "",
        "description": "Get all assets for account type.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Type of the account environment to fetch for.",
                    "enum": [
                      "LIVE",
                      "DEMO"
                    ],
                    "example": "LIVE"
                  }
                },
                "required": [
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number",
                            "description": "ID of the asset.",
                            "example": 203
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the asset.",
                            "example": "ADA"
                          }
                        },
                        "required": [
                          "id",
                          "name"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Brands"
        ]
      }
    },
    "/brand-api/v1/brand/daily-active-accounts": {
      "post": {
        "operationId": "BrandController_getActiveAccountsByDay",
        "summary": "",
        "description": "Get all billable accounts for specified day. Each account will contain a list of events that marks this account as active in a selected day.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "forDate": {
                    "type": "string",
                    "description": "Activity for set date. ISO format YYYY-MM-DD. All dates are in UTC.",
                    "example": "2024-09-01"
                  },
                  "returnType": {
                    "type": "string",
                    "enum": [
                      "json",
                      "csv"
                    ],
                    "default": "json",
                    "description": "Return data as Json or binary CSV."
                  }
                },
                "required": [
                  "forDate",
                  "returnType"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "forDateTime": {
                      "type": "string",
                      "description": "Activity for set date in UTC ISO format.",
                      "example": "2021-01-01T00:00:00.000Z"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "accountId": {
                            "type": "string",
                            "description": "Account ID without L#/D# type prefix.",
                            "example": "123456"
                          },
                          "login": {
                            "type": "string",
                            "description": "Account login",
                            "example": "DEMO#64538631ff8f5c0012ef79ae#1"
                          },
                          "group": {
                            "type": "string",
                            "description": "Account group",
                            "example": "DEMO-PROP"
                          },
                          "sessions": {
                            "type": "number",
                            "description": "Number of days with open sessions for selected date.",
                            "example": 3
                          },
                          "events": {
                            "type": "number",
                            "description": "Number of events for selected date range.",
                            "example": 33
                          },
                          "accounts": {
                            "type": "number",
                            "description": "Number of days with account creation.",
                            "example": 1
                          },
                          "openPositions": {
                            "type": "number",
                            "description": "Number of days with open positions.",
                            "example": 13
                          },
                          "orders": {
                            "type": "number",
                            "description": "Number of days with open orders.",
                            "example": 3
                          }
                        },
                        "required": [
                          "accountId",
                          "login",
                          "group",
                          "sessions",
                          "events",
                          "accounts",
                          "openPositions",
                          "orders"
                        ]
                      }
                    }
                  },
                  "required": [
                    "forDateTime",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Brands"
        ]
      }
    },
    "/brand-api/v1/brand/monthly-active-accounts": {
      "post": {
        "operationId": "BrandController_getActiveAccountsByMonth",
        "summary": "",
        "description": "Get all billable accounts for specified month. Each account will contain a list of events that marks this account as active for the whole monthly period.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "forMonth": {
                    "type": "string",
                    "description": "Activity for set month. ISO format YYYY-MM. All dates are in UTC.",
                    "example": "2021-08"
                  },
                  "returnType": {
                    "type": "string",
                    "enum": [
                      "json",
                      "csv"
                    ],
                    "default": "json",
                    "description": "Return data as Json or binary CSV."
                  }
                },
                "required": [
                  "forMonth",
                  "returnType"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "forDateTime": {
                      "type": "string",
                      "description": "Activity for set date in UTC ISO format.",
                      "example": "2021-01-01T00:00:00.000Z"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "accountId": {
                            "type": "string",
                            "description": "Account ID without L#/D# type prefix.",
                            "example": "123456"
                          },
                          "login": {
                            "type": "string",
                            "description": "Account login",
                            "example": "DEMO#64538631ff8f5c0012ef79ae#1"
                          },
                          "group": {
                            "type": "string",
                            "description": "Account group",
                            "example": "DEMO-PROP"
                          },
                          "sessions": {
                            "type": "number",
                            "description": "Number of days with open sessions for selected date.",
                            "example": 3
                          },
                          "events": {
                            "type": "number",
                            "description": "Number of events for selected date range.",
                            "example": 33
                          },
                          "accounts": {
                            "type": "number",
                            "description": "Number of days with account creation.",
                            "example": 1
                          },
                          "openPositions": {
                            "type": "number",
                            "description": "Number of days with open positions.",
                            "example": 13
                          },
                          "orders": {
                            "type": "number",
                            "description": "Number of days with open orders.",
                            "example": 3
                          }
                        },
                        "required": [
                          "accountId",
                          "login",
                          "group",
                          "sessions",
                          "events",
                          "accounts",
                          "openPositions",
                          "orders"
                        ]
                      }
                    }
                  },
                  "required": [
                    "forDateTime",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Brands"
        ]
      }
    },
    "/brand-api/v1/orders/all": {
      "post": {
        "operationId": "OrdersController_getAllOrders",
        "summary": "",
        "description": "Get all orders.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accountId": {
                    "type": "string",
                    "description": "Account ID.",
                    "pattern": "^[LD]#[0-9]+$",
                    "example": "L#617289"
                  },
                  "offset": {
                    "type": "number",
                    "description": "Defines the initial index number of outputting records.",
                    "example": 3000,
                    "default": 0,
                    "format": "int32"
                  },
                  "limit": {
                    "type": "number",
                    "description": "Defines the maximum number of records to fetch.",
                    "example": 2000,
                    "default": 1000,
                    "format": "int32"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the account environment to get orders for.",
                    "enum": [
                      "LIVE",
                      "DEMO"
                    ],
                    "example": "LIVE"
                  }
                },
                "required": [
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "accountId": {
                            "type": "string",
                            "description": "Account ID.",
                            "pattern": "^[LD]#[0-9]+$",
                            "example": "L#617289"
                          },
                          "amount": {
                            "type": "string",
                            "description": "Amount of the order."
                          },
                          "lotSize": {
                            "type": "string",
                            "description": "Units per lot.",
                            "example": "100000"
                          },
                          "averageFilledPrice": {
                            "type": "string",
                            "description": "Average filled price of the order.",
                            "nullable": true
                          },
                          "createdTime": {
                            "type": "number",
                            "deprecated": true,
                            "description": "Date of the order creation as UTC timestamp with milliseconds.",
                            "example": 1708696739441
                          },
                          "createdDateTime": {
                            "type": "string",
                            "description": "Date of the order creation in ISO date format.",
                            "example": "2021-06-01T12:00:00.000Z"
                          },
                          "expireTime": {
                            "type": "number",
                            "deprecated": true,
                            "description": "Date of the order expiration as UTC timestamp with milliseconds.",
                            "example": 1708696739441,
                            "nullable": true
                          },
                          "expireDateTime": {
                            "type": "string",
                            "description": "Date of the order creation in ISO date format.",
                            "example": "2021-06-01T12:00:00.000Z",
                            "nullable": true
                          },
                          "filledAmount": {
                            "type": "string",
                            "description": "Filled amount of the order.",
                            "format": "decimal"
                          },
                          "orderId": {
                            "type": "string",
                            "description": "ID of the order.",
                            "example": "72057594041239770"
                          },
                          "positionId": {
                            "type": "string",
                            "description": "ID of the position.",
                            "example": "72057594038933828",
                            "nullable": true
                          },
                          "price": {
                            "type": "string",
                            "description": "Price of the order."
                          },
                          "side": {
                            "type": "string",
                            "description": "Side of the order.",
                            "enum": [
                              "BUY",
                              "SELL",
                              "SHORT_SELL",
                              "BUY_TO_COVER"
                            ]
                          },
                          "slLimitPrice": {
                            "type": "string",
                            "description": "Stop Loss limit price of the order.",
                            "nullable": true
                          },
                          "slPrice": {
                            "type": "string",
                            "description": "Stop Loss price of the order.",
                            "nullable": true
                          },
                          "slPriceType": {
                            "type": "string",
                            "description": "Stop Loss price type of the order.",
                            "enum": [
                              "ABSOLUTE",
                              "OFFSET",
                              "TRAILING_STOP_OFFSET"
                            ]
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of the order.",
                            "enum": [
                              "STATUS_NONE",
                              "STATUS_PENDING_NEW",
                              "STATUS_PENDING_EXECUTION",
                              "STATUS_PENDING_CANCEL",
                              "STATUS_PENDING_REPLACE",
                              "STATUS_PENDING_REPLACE_NOT_ACTIVE",
                              "STATUS_NEW",
                              "STATUS_ACCEPTED",
                              "STATUS_REPLACED",
                              "STATUS_PART_FILLED",
                              "STATUS_FILLED",
                              "STATUS_CANCELED",
                              "STATUS_REFUSED",
                              "STATUS_RESTATED",
                              "EXEC_TYPE_ACTIVATED",
                              "STATUS_WAITING_MARKET",
                              "STATUS_OFF_MARKET",
                              "STATUS_UNPLACED",
                              "STATUS_REMOVED",
                              "STATUS_MODIFY_TRADING_MODE"
                            ]
                          },
                          "stopPrice": {
                            "type": "string",
                            "description": "Stop price of the order.",
                            "nullable": true
                          },
                          "tif": {
                            "type": "string",
                            "description": "Time-in-force of the order.",
                            "enum": [
                              "DAY",
                              "GTC",
                              "IOC",
                              "GTD",
                              "FOK",
                              "MOO",
                              "MOC",
                              "GTS"
                            ]
                          },
                          "tpPrice": {
                            "type": "string",
                            "description": "Take Profit price of the order.",
                            "nullable": true
                          },
                          "tpPriceType": {
                            "type": "string",
                            "description": "Take Profit price type of the order.",
                            "enum": [
                              "ABSOLUTE",
                              "OFFSET",
                              "TRAILING_STOP_OFFSET"
                            ]
                          },
                          "instrument": {
                            "type": "string",
                            "description": "Instrument name.",
                            "example": "EURUSD"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the order.",
                            "enum": [
                              "MANUAL",
                              "MARKET",
                              "STOP",
                              "LIMIT",
                              "STOP_LIMIT",
                              "TRAILING_STOP"
                            ]
                          }
                        },
                        "required": [
                          "accountId",
                          "amount",
                          "lotSize",
                          "averageFilledPrice",
                          "createdTime",
                          "createdDateTime",
                          "expireTime",
                          "expireDateTime",
                          "filledAmount",
                          "orderId",
                          "positionId",
                          "price",
                          "side",
                          "slLimitPrice",
                          "slPrice",
                          "slPriceType",
                          "status",
                          "stopPrice",
                          "tif",
                          "tpPrice",
                          "tpPriceType",
                          "instrument",
                          "type"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Orders"
        ]
      }
    },
    "/brand-api/v1/orders/cancel": {
      "post": {
        "operationId": "OrdersController_cancelOrder",
        "summary": "",
        "description": "Cancel order.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "orderId": {
                    "type": "string",
                    "description": "The ID of the order.",
                    "example": "72057594041239756"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the account to cancel the order for.",
                    "enum": [
                      "LIVE",
                      "DEMO"
                    ],
                    "example": "LIVE"
                  }
                },
                "required": [
                  "orderId",
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Orders"
        ]
      }
    },
    "/brand-api/v1/positions/get-open-positions": {
      "post": {
        "operationId": "PositionsController_getOpenPositions",
        "summary": "",
        "description": "Get all open positions. Positions are sorted by open timestamp in reverse-chronological order, so that the first position is the most recently opened one.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Type of accounts to fetch the open positions for.",
                    "enum": [
                      "LIVE",
                      "DEMO"
                    ],
                    "example": "LIVE"
                  },
                  "accountId": {
                    "type": "string",
                    "description": "Account ID.",
                    "pattern": "^[LD]#[0-9]+$",
                    "example": "L#617289"
                  }
                },
                "required": [
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "positionId": {
                            "type": "string",
                            "description": "ID of the position.",
                            "example": "72057594038933828"
                          },
                          "accountId": {
                            "type": "string",
                            "description": "Account ID.",
                            "pattern": "^[LD]#[0-9]+$",
                            "example": "L#617289"
                          },
                          "lots": {
                            "type": "string",
                            "description": "Position size expressed in lots.",
                            "example": "0.01"
                          },
                          "lotSize": {
                            "type": "string",
                            "description": "Units per lot.",
                            "example": "100000"
                          },
                          "units": {
                            "type": "string",
                            "description": "Position size expressed in units. units = lots * lotSize.",
                            "example": "1000"
                          },
                          "openTime": {
                            "type": "number",
                            "deprecated": true,
                            "description": "Date and time of the position open as UTC timestamp with milliseconds.",
                            "example": 1708696739441
                          },
                          "openDateTime": {
                            "type": "string",
                            "description": "Date and time of the position open.",
                            "example": "2021-06-01T12:00:00.000Z"
                          },
                          "pnl": {
                            "type": "string",
                            "description": "Profit & Loss.",
                            "example": "200.12"
                          },
                          "swap": {
                            "type": "string",
                            "description": "Swap.",
                            "example": "-13.08"
                          },
                          "slPrice": {
                            "type": "string",
                            "description": "Stop loss price.",
                            "nullable": true,
                            "example": "1.08166"
                          },
                          "tpPrice": {
                            "type": "string",
                            "description": "Take profit price.",
                            "nullable": true,
                            "example": "1.08318"
                          },
                          "openPrice": {
                            "type": "string",
                            "description": "Open price of the position.",
                            "example": "1.0822"
                          },
                          "side": {
                            "type": "string",
                            "description": "Side of the position.",
                            "enum": [
                              "BUY",
                              "SELL",
                              "SHORT_SELL",
                              "BUY_TO_COVER"
                            ],
                            "example": "BUY"
                          },
                          "instrument": {
                            "type": "string",
                            "description": "Instrument name.",
                            "example": "EURUSD"
                          }
                        },
                        "required": [
                          "positionId",
                          "accountId",
                          "lots",
                          "lotSize",
                          "units",
                          "openTime",
                          "openDateTime",
                          "pnl",
                          "swap",
                          "slPrice",
                          "tpPrice",
                          "openPrice",
                          "side",
                          "instrument"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Positions"
        ]
      }
    },
    "/brand-api/v1/positions/close": {
      "post": {
        "operationId": "PositionsController_closePosition",
        "summary": "",
        "description": "Close open position by positionId.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "positionId": {
                    "type": "string",
                    "description": "ID of the position."
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the account to close the position for.",
                    "enum": [
                      "LIVE",
                      "DEMO"
                    ],
                    "example": "LIVE"
                  }
                },
                "required": [
                  "positionId",
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Position closed successfully."
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Positions"
        ]
      }
    },
    "/brand-api/v1/reports/account-statement-report": {
      "post": {
        "operationId": "ReportsController_getAccountStatementReport",
        "summary": "",
        "description": "Get the account statement report for accounts of a brand. If no accountIds are provided, get the report for all accounts of a brand. Optionally, one can filter accounts by account status (e.g. ACTIVE, SUSPENDED, etc.).",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Type of accounts to fetch.",
                    "enum": [
                      "LIVE",
                      "DEMO"
                    ],
                    "example": "LIVE"
                  },
                  "accountIds": {
                    "type": "array",
                    "description": "Account IDs to fetch.",
                    "items": {
                      "type": "string",
                      "example": "L#123456"
                    }
                  },
                  "accountStatus": {
                    "type": "string",
                    "description": "Status of accounts to fetch.",
                    "enum": [
                      "ACTIVE",
                      "RESTRICTED",
                      "SUSPENDED"
                    ],
                    "example": "ACTIVE"
                  }
                },
                "required": [
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "accountId": {
                            "type": "string",
                            "description": "Account ID.",
                            "pattern": "^[LD]#[0-9]+$",
                            "example": "L#617289"
                          },
                          "balance": {
                            "type": "string",
                            "description": "Current account balance.",
                            "example": "9838.32"
                          },
                          "credit": {
                            "type": "string",
                            "description": "Current account credit.",
                            "example": "100.00"
                          },
                          "equity": {
                            "type": "string",
                            "description": "Current account equity.",
                            "example": "10365.11"
                          },
                          "pnl": {
                            "type": "string",
                            "description": "Current account profit & loss.",
                            "example": "426.79"
                          },
                          "marginUsed": {
                            "type": "string",
                            "description": "Current account used margin.",
                            "example": "6033.21"
                          },
                          "marginAvailable": {
                            "type": "string",
                            "description": "Current account available margin.",
                            "example": "3905.10"
                          },
                          "userGroupId": {
                            "type": "string",
                            "description": "User group ID of the account.",
                            "example": "618566"
                          }
                        },
                        "required": [
                          "accountId",
                          "balance",
                          "credit",
                          "equity",
                          "pnl",
                          "marginUsed",
                          "marginAvailable",
                          "userGroupId"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Reports"
        ]
      }
    },
    "/brand-api/v1/reports/trades-history-report": {
      "post": {
        "operationId": "ReportsController_getTradesHistoryReport",
        "summary": "",
        "description": "Get the trades history report for all accounts of a brand.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "startTime": {
                    "type": "number",
                    "deprecated": true,
                    "description": "Start time in milliseconds since epoch.",
                    "format": "int64",
                    "minimum": 1575072000000,
                    "example": 1709190470483
                  },
                  "startDateTime": {
                    "type": "string",
                    "description": "Start time in ISO format.",
                    "example": "2021-12-31T23:59:59.999Z"
                  },
                  "endTime": {
                    "type": "number",
                    "deprecated": true,
                    "description": "End time in milliseconds since epoch.",
                    "format": "int64",
                    "minimum": 1575072000000,
                    "example": 1709192495319
                  },
                  "endDateTime": {
                    "type": "string",
                    "description": "End time",
                    "example": "2021-12-31T23:59:59.999Z"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of accounts to fetch the trades history for.",
                    "enum": [
                      "LIVE",
                      "DEMO"
                    ],
                    "example": "LIVE"
                  },
                  "accountId": {
                    "type": "string",
                    "description": "Account ID.",
                    "pattern": "^[LD]#[0-9]+$",
                    "example": "L#617289"
                  },
                  "enableSLTP": {
                    "type": "boolean",
                    "description": "Enable or disable `stopLoss`, `stopLossLimit`, `takeProfit` from response. Disabling SLTP may result in faster response time.",
                    "example": false,
                    "default": true
                  }
                },
                "required": [
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tradeId": {
                            "type": "string",
                            "description": "Trade ID",
                            "example": "72057594039813847"
                          },
                          "orderId": {
                            "type": "string",
                            "description": "Order ID",
                            "example": "72057594041242672"
                          },
                          "accountId": {
                            "type": "string",
                            "description": "Account ID.",
                            "pattern": "^[LD]#[0-9]+$",
                            "example": "L#617289"
                          },
                          "side": {
                            "type": "string",
                            "description": "Side of the trade",
                            "example": "BUY",
                            "enum": [
                              "BUY",
                              "SELL"
                            ]
                          },
                          "orderType": {
                            "type": "string",
                            "description": "Order type",
                            "example": "MARKET",
                            "enum": [
                              "MARKET",
                              "PROTECTIVE_STOP",
                              "STOP_LOSS",
                              "STOP",
                              "STOP_OUT",
                              "PROTECTIVE_LIMIT",
                              "TAKE_PROFIT",
                              "LIMIT",
                              "STOP_LIMIT",
                              "TRAILING_STOP_LOSS",
                              "TRAILING_STOP"
                            ]
                          },
                          "positionStatus": {
                            "type": "string",
                            "description": "Position status",
                            "example": "CLOSE",
                            "enum": [
                              "CLOSE",
                              "OPEN",
                              "INCREASE",
                              "DECREASE"
                            ]
                          },
                          "tradeTime": {
                            "type": "number",
                            "deprecated": true,
                            "description": "Trade time in milliseconds since Unix epoch",
                            "example": 1709122885502
                          },
                          "tradeDateTime": {
                            "type": "string",
                            "description": "Trade time in ISO format",
                            "example": "2021-12-31T23:59:59.999Z"
                          },
                          "price": {
                            "type": "string",
                            "description": "Price",
                            "example": "3467.73"
                          },
                          "lots": {
                            "type": "string",
                            "description": "Amount in lots",
                            "example": "0.01"
                          },
                          "instrument": {
                            "type": "string",
                            "description": "Instrument name",
                            "example": "EURUSD"
                          },
                          "positionId": {
                            "type": "string",
                            "description": "Position ID",
                            "example": "72057594038936231"
                          },
                          "pnl": {
                            "type": "string",
                            "description": "Profit and loss.",
                            "example": "200.12"
                          },
                          "executionFee": {
                            "type": "string",
                            "description": "Execution fee",
                            "example": "3.13"
                          },
                          "stopLoss": {
                            "type": "string",
                            "description": "Stop loss price",
                            "example": "100.13",
                            "nullable": true
                          },
                          "stopLossLimit": {
                            "type": "string",
                            "description": "Stop loss limit price",
                            "example": "100.13",
                            "nullable": true
                          },
                          "takeProfit": {
                            "type": "string",
                            "description": "Take profit price",
                            "example": "100.13",
                            "nullable": true
                          },
                          "userGroupId": {
                            "type": "string",
                            "description": "User group ID of the account.",
                            "example": "618566"
                          }
                        },
                        "required": [
                          "tradeId",
                          "orderId",
                          "accountId",
                          "side",
                          "orderType",
                          "positionStatus",
                          "tradeTime",
                          "tradeDateTime",
                          "price",
                          "lots",
                          "instrument",
                          "positionId",
                          "pnl",
                          "executionFee",
                          "stopLoss",
                          "stopLossLimit",
                          "takeProfit",
                          "userGroupId"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Reports"
        ]
      }
    },
    "/brand-api/v1/reports/close-trades-history-report": {
      "post": {
        "operationId": "ReportsController_getCloseTradesHistoryReport",
        "summary": "",
        "description": "Get the close trades events for a single account. Pagination is cursor based, and the events are sorted in descending order by the close time. The report is limited to 20 events per request. If the number of events exceeds 20, the response will contain a cursor to fetch the next page of events. The cursor is a string that should be passed as a query parameter `cursor` in the next request to fetch the next page of events. If the cursor is not provided, the first page of events will be returned containing the most recent events.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accountId": {
                    "type": "string",
                    "description": "Account ID.",
                    "pattern": "^[LD]#[0-9]+$",
                    "example": "L#617289"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of accounts to fetch the close trades events.",
                    "enum": [
                      "LIVE",
                      "DEMO"
                    ],
                    "example": "LIVE"
                  },
                  "cursor": {
                    "type": "string",
                    "description": "Cursor to fetch the next page of events. If not provided, the first page of events will be returned. Must be an integer string, greater than or equal to 0 and less than or equal to 9223372036854775807",
                    "format": "integer",
                    "example": "72057594039889417"
                  },
                  "limit": {
                    "type": "string",
                    "format": "number",
                    "description": "Page size; max 1000, default 20."
                  }
                },
                "required": [
                  "accountId",
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "instrument": {
                            "type": "string",
                            "format": "number"
                          },
                          "openMilliseconds": {
                            "type": "string",
                            "format": "number",
                            "description": "Time of the order open in milliseconds."
                          },
                          "openDateTime": {
                            "type": "string",
                            "format": "isodate",
                            "description": "DateTime of the order open in ISO date string."
                          },
                          "orderType": {
                            "type": "string",
                            "enum": [
                              "Market",
                              "Protective stop",
                              "Stop loss",
                              "Stop",
                              "Stop Out",
                              "Protective limit",
                              "Take profit",
                              "Limit",
                              "Stop Limit",
                              "Trailing Stop Loss",
                              "Trailing Stop"
                            ]
                          },
                          "positionSide": {
                            "type": "string",
                            "enum": [
                              "Buy",
                              "Sell"
                            ]
                          },
                          "closeAmount": {
                            "type": "string",
                            "format": "number"
                          },
                          "averageOpenPrice": {
                            "type": "string",
                            "format": "number"
                          },
                          "closePrice": {
                            "type": "string",
                            "format": "number"
                          },
                          "closeMilliseconds": {
                            "type": "string",
                            "format": "number",
                            "description": "Time of the order close in milliseconds."
                          },
                          "closeDateTime": {
                            "type": "string",
                            "format": "isodate",
                            "description": "DateTime of the order close in ISO date string."
                          },
                          "openAmount": {
                            "type": "string",
                            "format": "number"
                          },
                          "closeTradeId": {
                            "type": "string",
                            "format": "number"
                          },
                          "openTradeId": {
                            "type": "string",
                            "format": "number"
                          },
                          "closeOrderId": {
                            "type": "string",
                            "format": "number"
                          },
                          "positionId": {
                            "type": "string",
                            "format": "number"
                          },
                          "openOrderId": {
                            "type": "string",
                            "format": "number"
                          },
                          "strategyId": {
                            "type": "string",
                            "nullable": true
                          },
                          "slPrice": {
                            "type": "string",
                            "format": "number",
                            "nullable": true
                          },
                          "slOrderType": {
                            "type": "string",
                            "enum": [
                              "STOP",
                              "STOP_LIMIT",
                              "TRAILING_STOP"
                            ],
                            "nullable": true
                          },
                          "slTrailingOffset": {
                            "type": "string",
                            "format": "number",
                            "nullable": true
                          },
                          "tpPrice": {
                            "type": "string",
                            "format": "number",
                            "nullable": true
                          },
                          "commission": {
                            "type": "string",
                            "format": "number"
                          },
                          "swap": {
                            "type": "string",
                            "format": "number"
                          },
                          "profit": {
                            "type": "string",
                            "format": "number"
                          },
                          "netProfit": {
                            "type": "string",
                            "format": "number"
                          }
                        },
                        "required": [
                          "instrument",
                          "openMilliseconds",
                          "openDateTime",
                          "orderType",
                          "positionSide",
                          "closeAmount",
                          "averageOpenPrice",
                          "closePrice",
                          "closeMilliseconds",
                          "closeDateTime",
                          "openAmount",
                          "closeTradeId",
                          "openTradeId",
                          "closeOrderId",
                          "positionId",
                          "openOrderId",
                          "strategyId",
                          "slPrice",
                          "slOrderType",
                          "slTrailingOffset",
                          "tpPrice",
                          "commission",
                          "swap",
                          "profit",
                          "netProfit"
                        ]
                      }
                    },
                    "links": {
                      "example": {
                        "next": {
                          "url": null,
                          "params": {
                            "accNum": "1",
                            "lastTradeId": "123456789"
                          }
                        }
                      },
                      "description": "Links to the next page of the report. Use `params` for the next page URL search params.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "next": {
                              "nullable": true,
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "url": {
                                      "type": "string",
                                      "format": "url",
                                      "nullable": true
                                    },
                                    "params": {
                                      "type": "object",
                                      "nullable": true
                                    }
                                  },
                                  "required": [
                                    "url",
                                    "params"
                                  ]
                                }
                              ]
                            }
                          },
                          "required": [
                            "next"
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "links"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Reports"
        ]
      }
    },
    "/brand-api/v1/reports/users-activities-report": {
      "post": {
        "operationId": "ReportsController_getUsersActivitiesReport",
        "summary": "",
        "description": "Get the users activities report for all accounts of a brand. Limit is 1000000 items. The range between startDateTime and endDateTime can be a maximum of 30 days. The data fetched by this endpoint is not real-time but is periodically updated at predefined intervals.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "startDateTime": {
                    "type": "string",
                    "description": "Start time in ISO format.",
                    "example": "2021-12-31T23:59:59.999Z"
                  },
                  "endDateTime": {
                    "type": "string",
                    "description": "End time in ISO format.",
                    "example": "2021-12-31T23:59:59.999Z"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of accounts to include in the report.",
                    "enum": [
                      "LIVE",
                      "DEMO"
                    ],
                    "example": "LIVE"
                  }
                },
                "required": [
                  "startDateTime",
                  "endDateTime",
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipAddress": {
                            "type": "string",
                            "description": "IP address of the user",
                            "example": "3600:100e:b31c:3d8d:2900:59d6:aaca:e74e"
                          },
                          "userId": {
                            "type": "string",
                            "description": "Unique identifier of the user",
                            "example": "56f18b48-8ad0-4573-a9c1-d3f3e2992f46"
                          },
                          "deviceId": {
                            "type": "string",
                            "description": "Unique identifier of the device",
                            "example": "27c86721-76e8-4100-aa23-1f0b04c251a4"
                          },
                          "firstSeen": {
                            "type": "number",
                            "description": "First seen in milliseconds since Unix epoch",
                            "example": 1709122885502
                          },
                          "firstSeenISO": {
                            "type": "string",
                            "description": "First seen as an ISO 8601 string",
                            "example": "2024-09-27T20:46:11.666Z"
                          },
                          "lastSeen": {
                            "type": "number",
                            "description": "Last seen in milliseconds since Unix epoch",
                            "example": 1709122885510
                          },
                          "lastSeenISO": {
                            "type": "string",
                            "description": "Last seen as an ISO 8601 string",
                            "example": "2024-09-27T20:46:11.666Z"
                          },
                          "country": {
                            "type": "string",
                            "description": "Country of the user",
                            "example": "United States"
                          },
                          "city": {
                            "type": "string",
                            "description": "City of the user",
                            "example": "New York"
                          },
                          "region": {
                            "type": "string",
                            "description": "Region of the user",
                            "example": "New York"
                          },
                          "platform": {
                            "type": "string",
                            "description": "Platform of the user",
                            "example": "Web"
                          },
                          "osName": {
                            "type": "string",
                            "description": "Operation System of the user",
                            "example": "Chrome"
                          },
                          "osVersion": {
                            "type": "string",
                            "description": "Operation System version of the user",
                            "example": "109"
                          },
                          "deviceFamily": {
                            "type": "string",
                            "description": "Device family of the user",
                            "example": "Google Phone"
                          },
                          "deviceType": {
                            "type": "string",
                            "description": "City of the user",
                            "example": "Google Pixel 6 Pro"
                          }
                        },
                        "required": [
                          "ipAddress",
                          "userId",
                          "deviceId",
                          "firstSeen",
                          "firstSeenISO",
                          "lastSeen",
                          "lastSeenISO",
                          "country",
                          "city",
                          "region",
                          "platform",
                          "osName",
                          "osVersion",
                          "deviceFamily",
                          "deviceType"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "501": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Reports"
        ]
      }
    },
    "/brand-api/v1/reports/account-operations-history-report": {
      "post": {
        "operationId": "ReportsController_getAccountOperationsHistory",
        "summary": "",
        "description": "Retrieves the account operations history for account associated with a brand. Limit is 100000 items. The range between startDateTime and endDateTime can be a maximum of 365 days. Optionally, operations can be filtered by operation types (e.g. TRADING, DEPOSIT, WITHDRAW, COMMISSION, SWAP, BLOCKING, UNBLOCKING, ADJUSTMENT, SPREAD, CREDIT, BALANCE_CREDIT).",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accountId": {
                    "type": "string",
                    "description": "Account ID.",
                    "pattern": "^[LD]#[0-9]+$",
                    "example": "L#617289"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of accounts to fetch the close trades events.",
                    "enum": [
                      "LIVE",
                      "DEMO"
                    ],
                    "example": "LIVE"
                  },
                  "startDateTime": {
                    "type": "string",
                    "description": "Start time in ISO format.",
                    "example": "2021-12-31T23:59:59.999Z"
                  },
                  "endDateTime": {
                    "type": "string",
                    "description": "End time in ISO format.",
                    "example": "2021-12-31T23:59:59.999Z"
                  },
                  "operationTypes": {
                    "type": "array",
                    "description": "Array of operation type strings",
                    "items": {
                      "type": "string",
                      "enum": [
                        "TRADING",
                        "DEPOSIT",
                        "WITHDRAW",
                        "COMMISSION",
                        "SWAP",
                        "BLOCKING",
                        "UNBLOCKING",
                        "ADJUSTMENT",
                        "SPREAD",
                        "CREDIT",
                        "BALANCE_CREDIT"
                      ]
                    }
                  }
                },
                "required": [
                  "accountId",
                  "type",
                  "startDateTime",
                  "endDateTime"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "number"
                          },
                          "dateTime": {
                            "type": "string",
                            "description": "Date time in ISO format.",
                            "example": "2021-12-31T23:59:59.999Z"
                          },
                          "operationTypeId": {
                            "type": "string",
                            "enum": [
                              "1",
                              "2",
                              "3",
                              "4",
                              "5",
                              "7",
                              "8",
                              "12",
                              "18",
                              "19",
                              "100"
                            ],
                            "description": "The id of the operation type."
                          },
                          "operationTypeName": {
                            "type": "string",
                            "enum": [
                              "TRADING",
                              "DEPOSIT",
                              "WITHDRAW",
                              "COMMISSION",
                              "SWAP",
                              "BLOCKING",
                              "UNBLOCKING",
                              "ADJUSTMENT",
                              "SPREAD",
                              "CREDIT",
                              "BALANCE_CREDIT"
                            ],
                            "description": "The name of the operation type."
                          },
                          "balanceChange": {
                            "type": "string",
                            "format": "number"
                          },
                          "resultingBalance": {
                            "type": "string",
                            "format": "number"
                          },
                          "amount": {
                            "type": "string",
                            "format": "number",
                            "nullable": true
                          }
                        },
                        "required": [
                          "id",
                          "dateTime",
                          "operationTypeId",
                          "operationTypeName",
                          "balanceChange",
                          "resultingBalance",
                          "amount"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Reports"
        ]
      }
    },
    "/brand-api/v1/groups/all": {
      "post": {
        "operationId": "GroupsController_getGroups",
        "summary": "",
        "description": "Get all groups of a brand.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Type of account environment to fetch the available groups for.",
                    "enum": [
                      "LIVE",
                      "DEMO"
                    ],
                    "example": "LIVE"
                  }
                },
                "required": [
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the group.",
                            "example": "27495"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the group.",
                            "example": "FXBR-GEN"
                          }
                        },
                        "required": [
                          "id",
                          "name"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "message",
                    "status",
                    "statusCode"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Groups"
        ]
      }
    }
  },
  "info": {
    "title": "Brand API",
    "description": "Brand API docs long description",
    "version": "1.5.2",
    "contact": {}
  },
  "tags": [],
  "servers": [
    {
      "url": "https://api-dev.tradelocker.com/",
      "description": "Development server"
    },
    {
      "url": "https://api.tradelocker.com/",
      "description": "Production server"
    }
  ],
  "components": {
    "securitySchemes": {
      "api-key": {
        "type": "apiKey",
        "in": "header",
        "name": "brand-api-key"
      }
    },
    "schemas": {
      "UserDetailsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the user. UUID",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          },
          "email": {
            "type": "string",
            "description": "Email of the user.",
            "example": "john.doe@tradelocker.com"
          },
          "firstName": {
            "type": "string",
            "description": "Name of the user.",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "description": "Surname of the user.",
            "example": "Doe"
          },
          "server": {
            "type": "string",
            "description": "The server field for TradeLocker login.",
            "example": "FXBR",
            "maximum": 8
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "deprecated": true,
            "description": "Date and time when the user was created.",
            "example": "2020-01-01T00:00:00.000Z"
          },
          "createdDateTime": {
            "type": "string",
            "description": "Date and time when the user was created.",
            "example": "2020-01-01T00:00:00.000Z"
          }
        },
        "required": [
          "id",
          "email",
          "firstName",
          "lastName",
          "server",
          "createdAt",
          "createdDateTime"
        ]
      },
      "HttpErrorDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "number"
          },
          "requestId": {
            "type": "string",
            "description": "Unique id tied to the specific request. Please provide it when reporting errors, as it greatly helps us in debugging.",
            "format": "uuid"
          }
        },
        "required": [
          "message",
          "status",
          "statusCode"
        ]
      },
      "UserEmailDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email of the user. Use lowercase email for consistency.",
            "example": "john.doe@tradelocker.com"
          }
        },
        "required": [
          "email"
        ]
      },
      "UserIdDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "The ID of the user. (UUID)",
            "format": "uuid",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          }
        },
        "required": [
          "userId"
        ]
      },
      "FindParamsDto": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "number",
            "description": "Offset the results by specified number.",
            "format": "int32",
            "example": 2000,
            "minimum": 0,
            "default": 0
          },
          "limit": {
            "type": "number",
            "description": "Limit the number of return results.",
            "format": "int32",
            "example": 1000,
            "minimum": 1,
            "maximum": 100000,
            "default": 10000
          }
        }
      },
      "UserDetailsDataEnvelopeDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID of the user. UUID",
                  "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "email": {
                  "type": "string",
                  "description": "Email of the user.",
                  "example": "john.doe@tradelocker.com"
                },
                "firstName": {
                  "type": "string",
                  "description": "Name of the user.",
                  "example": "John"
                },
                "lastName": {
                  "type": "string",
                  "description": "Surname of the user.",
                  "example": "Doe"
                },
                "server": {
                  "type": "string",
                  "description": "The server field for TradeLocker login.",
                  "example": "FXBR",
                  "maximum": 8
                },
                "createdAt": {
                  "format": "date-time",
                  "type": "string",
                  "deprecated": true,
                  "description": "Date and time when the user was created.",
                  "example": "2020-01-01T00:00:00.000Z"
                },
                "createdDateTime": {
                  "type": "string",
                  "description": "Date and time when the user was created.",
                  "example": "2020-01-01T00:00:00.000Z"
                }
              },
              "required": [
                "id",
                "email",
                "firstName",
                "lastName",
                "server",
                "createdAt",
                "createdDateTime"
              ]
            }
          },
          "hasMore": {
            "type": "boolean"
          }
        },
        "required": [
          "data",
          "hasMore"
        ]
      },
      "UserCreateDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email of the user. Use lowercase email for consistency.",
            "example": "john.doe@tradelocker.com"
          },
          "firstName": {
            "type": "string",
            "description": "Name of the user (optional).",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of the user (optional).",
            "example": "Doe"
          },
          "password": {
            "type": "string",
            "description": "Desired password. Must be 6 characters long, contain at least one number, one special character and have a mixture of uppercase and lowercase letters",
            "example": "p@ssW0rd1"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "UserSetPasswordDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "The ID of the user. (UUID)",
            "format": "uuid",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          },
          "password": {
            "type": "string",
            "description": "Desired password. Must be 6 characters long, contain at least one number, one special character and have a mixture of uppercase and lowercase letters",
            "example": "p@ssW0rd1"
          }
        },
        "required": [
          "userId",
          "password"
        ]
      },
      "UserSetEmailDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "The ID of the user. (UUID)",
            "format": "uuid",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          },
          "email": {
            "type": "string",
            "description": "Email of the user. Use lowercase email for consistency.",
            "example": "john.doe@tradelocker.com"
          }
        },
        "required": [
          "userId",
          "email"
        ]
      },
      "GetAccountsDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "The ID of the user. (UUID)",
            "format": "uuid",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          }
        },
        "required": [
          "userId"
        ]
      },
      "TradingDisabledReasonDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Reason for trading being disabled.",
            "enum": [
              "RISK_RULE"
            ],
            "example": "RISK_RULE"
          }
        },
        "required": [
          "type"
        ]
      },
      "AccountDto": {
        "type": "object",
        "properties": {
          "accountName": {
            "type": "string",
            "description": "The name of the account.",
            "example": "Main Account"
          },
          "accountId": {
            "type": "string",
            "description": "Account ID.",
            "pattern": "^[LD]#[0-9]+$",
            "example": "L#617289"
          },
          "userId": {
            "type": "string",
            "description": "The ID of the user. (UUID)",
            "format": "uuid",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          },
          "userGroupId": {
            "type": "string",
            "description": "User group ID of the account.",
            "example": "618566"
          },
          "type": {
            "type": "string",
            "description": "Type of the account to create.",
            "enum": [
              "LIVE",
              "DEMO"
            ],
            "example": "LIVE"
          },
          "status": {
            "type": "string",
            "description": "Status of the account. If ACTIVE, trading could be disabled by a risk rule. Check the 'tradingDisabledReason' property.",
            "enum": [
              "ACTIVE",
              "RESTRICTED",
              "SUSPENDED"
            ],
            "example": "ACTIVE"
          },
          "tradingDisabledReason": {
            "description": "The reason for trading being disabled. If null, trading is enabled.",
            "nullable": true,
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Reason for trading being disabled.",
                    "enum": [
                      "RISK_RULE"
                    ],
                    "example": "RISK_RULE"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          },
          "currency": {
            "type": "string",
            "description": "3 letter ISO 4217 code of the currency or ticker symbol for crypto asset of this account.",
            "example": "USD",
            "minLength": 3,
            "maxLength": 10
          },
          "leverage": {
            "type": "string",
            "description": "Leverage for the account.",
            "enum": [
              "50",
              "100",
              "200",
              "300",
              "400",
              "500"
            ],
            "example": "100"
          },
          "balance": {
            "type": "string",
            "description": "Current account balance.",
            "example": "3905.10"
          },
          "blockedBalance": {
            "type": "string",
            "description": "Current account blocked balance.",
            "example": "500.00"
          },
          "credit": {
            "type": "string",
            "description": "Current account credit.",
            "example": "1000.00"
          },
          "equity": {
            "type": "string",
            "description": "Current account equity.",
            "example": "700.00"
          },
          "pnl": {
            "type": "string",
            "description": "Current account pnl.",
            "example": "100.00"
          },
          "marginAvailable": {
            "type": "string",
            "description": "Current account margin available.",
            "example": "2000.00"
          },
          "marginUsed": {
            "type": "string",
            "description": "Current account margin used.",
            "example": "1800.00"
          },
          "createdDateTime": {
            "type": "string",
            "description": "Date and time when the account was created.",
            "example": "2020-01-01T00:00:00.000Z"
          }
        },
        "required": [
          "accountName",
          "accountId",
          "userId",
          "userGroupId",
          "type",
          "status",
          "tradingDisabledReason",
          "currency",
          "balance",
          "blockedBalance",
          "credit",
          "equity",
          "pnl",
          "marginAvailable",
          "marginUsed",
          "createdDateTime"
        ]
      },
      "AccountDataEnvelopeDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "accountName": {
                  "type": "string",
                  "description": "The name of the account.",
                  "example": "Main Account"
                },
                "accountId": {
                  "type": "string",
                  "description": "Account ID.",
                  "pattern": "^[LD]#[0-9]+$",
                  "example": "L#617289"
                },
                "userId": {
                  "type": "string",
                  "description": "The ID of the user. (UUID)",
                  "format": "uuid",
                  "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "userGroupId": {
                  "type": "string",
                  "description": "User group ID of the account.",
                  "example": "618566"
                },
                "type": {
                  "type": "string",
                  "description": "Type of the account to create.",
                  "enum": [
                    "LIVE",
                    "DEMO"
                  ],
                  "example": "LIVE"
                },
                "status": {
                  "type": "string",
                  "description": "Status of the account. If ACTIVE, trading could be disabled by a risk rule. Check the 'tradingDisabledReason' property.",
                  "enum": [
                    "ACTIVE",
                    "RESTRICTED",
                    "SUSPENDED"
                  ],
                  "example": "ACTIVE"
                },
                "tradingDisabledReason": {
                  "description": "The reason for trading being disabled. If null, trading is enabled.",
                  "nullable": true,
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Reason for trading being disabled.",
                          "enum": [
                            "RISK_RULE"
                          ],
                          "example": "RISK_RULE"
                        }
                      },
                      "required": [
                        "type"
                      ]
                    }
                  ]
                },
                "currency": {
                  "type": "string",
                  "description": "3 letter ISO 4217 code of the currency or ticker symbol for crypto asset of this account.",
                  "example": "USD",
                  "minLength": 3,
                  "maxLength": 10
                },
                "leverage": {
                  "type": "string",
                  "description": "Leverage for the account.",
                  "enum": [
                    "50",
                    "100",
                    "200",
                    "300",
                    "400",
                    "500"
                  ],
                  "example": "100"
                },
                "balance": {
                  "type": "string",
                  "description": "Current account balance.",
                  "example": "3905.10"
                },
                "blockedBalance": {
                  "type": "string",
                  "description": "Current account blocked balance.",
                  "example": "500.00"
                },
                "credit": {
                  "type": "string",
                  "description": "Current account credit.",
                  "example": "1000.00"
                },
                "equity": {
                  "type": "string",
                  "description": "Current account equity.",
                  "example": "700.00"
                },
                "pnl": {
                  "type": "string",
                  "description": "Current account pnl.",
                  "example": "100.00"
                },
                "marginAvailable": {
                  "type": "string",
                  "description": "Current account margin available.",
                  "example": "2000.00"
                },
                "marginUsed": {
                  "type": "string",
                  "description": "Current account margin used.",
                  "example": "1800.00"
                },
                "createdDateTime": {
                  "type": "string",
                  "description": "Date and time when the account was created.",
                  "example": "2020-01-01T00:00:00.000Z"
                }
              },
              "required": [
                "accountName",
                "accountId",
                "userId",
                "userGroupId",
                "type",
                "status",
                "tradingDisabledReason",
                "currency",
                "balance",
                "blockedBalance",
                "credit",
                "equity",
                "pnl",
                "marginAvailable",
                "marginUsed",
                "createdDateTime"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetAccountDetailsDto": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "Account ID.",
            "pattern": "^[LD]#[0-9]+$",
            "example": "L#617289"
          }
        },
        "required": [
          "accountId"
        ]
      },
      "ShortAccountDto": {
        "type": "object",
        "properties": {
          "accountName": {
            "type": "string",
            "description": "The name of the account.",
            "example": "Main Account"
          },
          "accountId": {
            "type": "string",
            "description": "Account ID.",
            "pattern": "^[LD]#[0-9]+$",
            "example": "L#617289"
          },
          "userId": {
            "type": "string",
            "description": "The ID of the user. (UUID)",
            "format": "uuid",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          },
          "type": {
            "type": "string",
            "description": "Type of the account to create.",
            "enum": [
              "LIVE",
              "DEMO"
            ],
            "example": "LIVE"
          },
          "status": {
            "type": "string",
            "description": "Status of the account.",
            "enum": [
              "ACTIVE",
              "RESTRICTED",
              "SUSPENDED"
            ],
            "example": "ACTIVE"
          }
        },
        "required": [
          "accountName",
          "accountId",
          "userId",
          "type",
          "status"
        ]
      },
      "ShortAccountDataEnvelopeDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "accountName": {
                  "type": "string",
                  "description": "The name of the account.",
                  "example": "Main Account"
                },
                "accountId": {
                  "type": "string",
                  "description": "Account ID.",
                  "pattern": "^[LD]#[0-9]+$",
                  "example": "L#617289"
                },
                "userId": {
                  "type": "string",
                  "description": "The ID of the user. (UUID)",
                  "format": "uuid",
                  "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "type": {
                  "type": "string",
                  "description": "Type of the account to create.",
                  "enum": [
                    "LIVE",
                    "DEMO"
                  ],
                  "example": "LIVE"
                },
                "status": {
                  "type": "string",
                  "description": "Status of the account.",
                  "enum": [
                    "ACTIVE",
                    "RESTRICTED",
                    "SUSPENDED"
                  ],
                  "example": "ACTIVE"
                }
              },
              "required": [
                "accountName",
                "accountId",
                "userId",
                "type",
                "status"
              ]
            }
          },
          "hasMore": {
            "type": "boolean"
          }
        },
        "required": [
          "data",
          "hasMore"
        ]
      },
      "CreateAccountDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "The ID of the user. (UUID)",
            "format": "uuid",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          },
          "accountName": {
            "type": "string",
            "description": "The name of the account.",
            "example": "Main Account"
          },
          "type": {
            "type": "string",
            "description": "Type of the account to create.",
            "enum": [
              "LIVE",
              "DEMO"
            ],
            "example": "LIVE"
          },
          "currency": {
            "type": "string",
            "description": "3 letter ISO 4217 code of the currency or ticker symbol for crypto asset of this account.",
            "example": "USD",
            "minLength": 3,
            "maxLength": 10
          },
          "groupId": {
            "type": "string",
            "description": "ID of the group to place the account into. If not provided, placed into brand's default group.",
            "example": "27495"
          }
        },
        "required": [
          "userId",
          "accountName",
          "type",
          "currency"
        ]
      },
      "AccountIdDto": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "Account ID.",
            "pattern": "^[LD]#[0-9]+$",
            "example": "L#617289"
          }
        },
        "required": [
          "accountId"
        ]
      },
      "AccountStatusDto": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "Account ID.",
            "pattern": "^[LD]#[0-9]+$",
            "example": "L#617289"
          },
          "status": {
            "type": "string",
            "description": "Status of the account.",
            "enum": [
              "ACTIVE",
              "RESTRICTED",
              "SUSPENDED"
            ],
            "example": "ACTIVE"
          }
        },
        "required": [
          "accountId",
          "status"
        ]
      },
      "UpdateAccountGroupDto": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "Account ID.",
            "pattern": "^[LD]#[0-9]+$",
            "example": "L#617289"
          },
          "newGroupId": {
            "type": "string",
            "description": "ID of the new group for the account.",
            "example": "621106"
          }
        },
        "required": [
          "accountId",
          "newGroupId"
        ]
      },
      "CloseAllPositionsDto": {
        "type": "object",
        "properties": {
          "positionIdsOrderedToBeClosed": {
            "type": "array",
            "description": "A list of positionIds which were ordered to be closed. To make sure they were closed - call `/positions/get-open-positions` for this accountId",
            "items": {
              "type": "string",
              "example": "72057594038949120"
            }
          }
        },
        "required": [
          "positionIdsOrderedToBeClosed"
        ]
      },
      "CancelAllOrdersDto": {
        "type": "object",
        "properties": {
          "orderIdsOrderedToBeCanceled": {
            "type": "array",
            "description": "A list of orderIds which were ordered to be canceled. To make sure they were canceled - call `/orders/all` for this accountId",
            "items": {
              "type": "string",
              "example": "72057594038949120"
            }
          },
          "orderIdsFailedToCancel": {
            "type": "array",
            "description": "A list of orderIds whose cancellation has failed. To check if the system is in a consistent state - call `/orders/all` for this accountId.",
            "items": {
              "type": "string",
              "example": "72057594038949121"
            }
          }
        },
        "required": [
          "orderIdsOrderedToBeCanceled",
          "orderIdsFailedToCancel"
        ]
      },
      "PositiveAccountOperationRequestDto": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "Account ID.",
            "pattern": "^[LD]#[0-9]+$",
            "example": "L#617289"
          },
          "amount": {
            "type": "string",
            "description": "Amount of the operation. Must be positive.",
            "example": "100.20"
          },
          "note": {
            "type": "string",
            "description": "Account operation note.",
            "maxLength": 255,
            "example": "Internal Transfer"
          }
        },
        "required": [
          "accountId",
          "amount"
        ]
      },
      "AccountOperationResponseDto": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string",
            "description": "Account operation ID",
            "example": "72057594039577496"
          }
        },
        "required": [
          "operationId"
        ]
      },
      "AccountOperationRequestDto": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "Account ID.",
            "pattern": "^[LD]#[0-9]+$",
            "example": "L#617289"
          },
          "amount": {
            "type": "string",
            "description": "Amount of the operation. Positive to add, negative to subtract.",
            "example": "100.20"
          },
          "note": {
            "type": "string",
            "description": "Account operation note.",
            "maxLength": 255,
            "example": "Internal Transfer"
          }
        },
        "required": [
          "accountId",
          "amount"
        ]
      },
      "AccountTypeDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of the account environment to fetch for.",
            "enum": [
              "LIVE",
              "DEMO"
            ],
            "example": "LIVE"
          }
        },
        "required": [
          "type"
        ]
      },
      "InstrumentDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the instrument.",
            "example": "ADAUSD"
          },
          "lotSize": {
            "type": "number",
            "description": "Lot size for the instrument.",
            "example": 100
          }
        },
        "required": [
          "name",
          "lotSize"
        ]
      },
      "InstrumentsDataEnvelopeDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the instrument.",
                  "example": "ADAUSD"
                },
                "lotSize": {
                  "type": "number",
                  "description": "Lot size for the instrument.",
                  "example": 100
                }
              },
              "required": [
                "name",
                "lotSize"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AssetDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "ID of the asset.",
            "example": 203
          },
          "name": {
            "type": "string",
            "description": "Name of the asset.",
            "example": "ADA"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "AssetsDataEnvelopeDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "ID of the asset.",
                  "example": 203
                },
                "name": {
                  "type": "string",
                  "description": "Name of the asset.",
                  "example": "ADA"
                }
              },
              "required": [
                "id",
                "name"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "DailyActiveAccountsRequestDto": {
        "type": "object",
        "properties": {
          "forDate": {
            "type": "string",
            "description": "Activity for set date. ISO format YYYY-MM-DD. All dates are in UTC.",
            "example": "2024-09-01"
          },
          "returnType": {
            "type": "string",
            "enum": [
              "json",
              "csv"
            ],
            "default": "json",
            "description": "Return data as Json or binary CSV."
          }
        },
        "required": [
          "forDate",
          "returnType"
        ]
      },
      "ActiveAccountsResponseDto": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "Account ID without L#/D# type prefix.",
            "example": "123456"
          },
          "login": {
            "type": "string",
            "description": "Account login",
            "example": "DEMO#64538631ff8f5c0012ef79ae#1"
          },
          "group": {
            "type": "string",
            "description": "Account group",
            "example": "DEMO-PROP"
          },
          "sessions": {
            "type": "number",
            "description": "Number of days with open sessions for selected date.",
            "example": 3
          },
          "events": {
            "type": "number",
            "description": "Number of events for selected date range.",
            "example": 33
          },
          "accounts": {
            "type": "number",
            "description": "Number of days with account creation.",
            "example": 1
          },
          "openPositions": {
            "type": "number",
            "description": "Number of days with open positions.",
            "example": 13
          },
          "orders": {
            "type": "number",
            "description": "Number of days with open orders.",
            "example": 3
          }
        },
        "required": [
          "accountId",
          "login",
          "group",
          "sessions",
          "events",
          "accounts",
          "openPositions",
          "orders"
        ]
      },
      "ActiveAccountsResponseEnvelopeDto": {
        "type": "object",
        "properties": {
          "forDateTime": {
            "type": "string",
            "description": "Activity for set date in UTC ISO format.",
            "example": "2021-01-01T00:00:00.000Z"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "accountId": {
                  "type": "string",
                  "description": "Account ID without L#/D# type prefix.",
                  "example": "123456"
                },
                "login": {
                  "type": "string",
                  "description": "Account login",
                  "example": "DEMO#64538631ff8f5c0012ef79ae#1"
                },
                "group": {
                  "type": "string",
                  "description": "Account group",
                  "example": "DEMO-PROP"
                },
                "sessions": {
                  "type": "number",
                  "description": "Number of days with open sessions for selected date.",
                  "example": 3
                },
                "events": {
                  "type": "number",
                  "description": "Number of events for selected date range.",
                  "example": 33
                },
                "accounts": {
                  "type": "number",
                  "description": "Number of days with account creation.",
                  "example": 1
                },
                "openPositions": {
                  "type": "number",
                  "description": "Number of days with open positions.",
                  "example": 13
                },
                "orders": {
                  "type": "number",
                  "description": "Number of days with open orders.",
                  "example": 3
                }
              },
              "required": [
                "accountId",
                "login",
                "group",
                "sessions",
                "events",
                "accounts",
                "openPositions",
                "orders"
              ]
            }
          }
        },
        "required": [
          "forDateTime",
          "data"
        ]
      },
      "MonthlyActiveAccountsRequestDto": {
        "type": "object",
        "properties": {
          "forMonth": {
            "type": "string",
            "description": "Activity for set month. ISO format YYYY-MM. All dates are in UTC.",
            "example": "2021-08"
          },
          "returnType": {
            "type": "string",
            "enum": [
              "json",
              "csv"
            ],
            "default": "json",
            "description": "Return data as Json or binary CSV."
          }
        },
        "required": [
          "forMonth",
          "returnType"
        ]
      },
      "AllOrdersRequestDto": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "Account ID.",
            "pattern": "^[LD]#[0-9]+$",
            "example": "L#617289"
          },
          "offset": {
            "type": "number",
            "description": "Defines the initial index number of outputting records.",
            "example": 3000,
            "default": 0,
            "format": "int32"
          },
          "limit": {
            "type": "number",
            "description": "Defines the maximum number of records to fetch.",
            "example": 2000,
            "default": 1000,
            "format": "int32"
          },
          "type": {
            "type": "string",
            "description": "Type of the account environment to get orders for.",
            "enum": [
              "LIVE",
              "DEMO"
            ],
            "example": "LIVE"
          }
        },
        "required": [
          "type"
        ]
      },
      "OrderResponseDto": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "Account ID.",
            "pattern": "^[LD]#[0-9]+$",
            "example": "L#617289"
          },
          "amount": {
            "type": "string",
            "description": "Amount of the order."
          },
          "lotSize": {
            "type": "string",
            "description": "Units per lot.",
            "example": "100000"
          },
          "averageFilledPrice": {
            "type": "string",
            "description": "Average filled price of the order.",
            "nullable": true
          },
          "createdTime": {
            "type": "number",
            "deprecated": true,
            "description": "Date of the order creation as UTC timestamp with milliseconds.",
            "example": 1708696739441
          },
          "createdDateTime": {
            "type": "string",
            "description": "Date of the order creation in ISO date format.",
            "example": "2021-06-01T12:00:00.000Z"
          },
          "expireTime": {
            "type": "number",
            "deprecated": true,
            "description": "Date of the order expiration as UTC timestamp with milliseconds.",
            "example": 1708696739441,
            "nullable": true
          },
          "expireDateTime": {
            "type": "string",
            "description": "Date of the order creation in ISO date format.",
            "example": "2021-06-01T12:00:00.000Z",
            "nullable": true
          },
          "filledAmount": {
            "type": "string",
            "description": "Filled amount of the order.",
            "format": "decimal"
          },
          "orderId": {
            "type": "string",
            "description": "ID of the order.",
            "example": "72057594041239770"
          },
          "positionId": {
            "type": "string",
            "description": "ID of the position.",
            "example": "72057594038933828",
            "nullable": true
          },
          "price": {
            "type": "string",
            "description": "Price of the order."
          },
          "side": {
            "type": "string",
            "description": "Side of the order.",
            "enum": [
              "BUY",
              "SELL",
              "SHORT_SELL",
              "BUY_TO_COVER"
            ]
          },
          "slLimitPrice": {
            "type": "string",
            "description": "Stop Loss limit price of the order.",
            "nullable": true
          },
          "slPrice": {
            "type": "string",
            "description": "Stop Loss price of the order.",
            "nullable": true
          },
          "slPriceType": {
            "type": "string",
            "description": "Stop Loss price type of the order.",
            "enum": [
              "ABSOLUTE",
              "OFFSET",
              "TRAILING_STOP_OFFSET"
            ]
          },
          "status": {
            "type": "string",
            "description": "Status of the order.",
            "enum": [
              "STATUS_NONE",
              "STATUS_PENDING_NEW",
              "STATUS_PENDING_EXECUTION",
              "STATUS_PENDING_CANCEL",
              "STATUS_PENDING_REPLACE",
              "STATUS_PENDING_REPLACE_NOT_ACTIVE",
              "STATUS_NEW",
              "STATUS_ACCEPTED",
              "STATUS_REPLACED",
              "STATUS_PART_FILLED",
              "STATUS_FILLED",
              "STATUS_CANCELED",
              "STATUS_REFUSED",
              "STATUS_RESTATED",
              "EXEC_TYPE_ACTIVATED",
              "STATUS_WAITING_MARKET",
              "STATUS_OFF_MARKET",
              "STATUS_UNPLACED",
              "STATUS_REMOVED",
              "STATUS_MODIFY_TRADING_MODE"
            ]
          },
          "stopPrice": {
            "type": "string",
            "description": "Stop price of the order.",
            "nullable": true
          },
          "tif": {
            "type": "string",
            "description": "Time-in-force of the order.",
            "enum": [
              "DAY",
              "GTC",
              "IOC",
              "GTD",
              "FOK",
              "MOO",
              "MOC",
              "GTS"
            ]
          },
          "tpPrice": {
            "type": "string",
            "description": "Take Profit price of the order.",
            "nullable": true
          },
          "tpPriceType": {
            "type": "string",
            "description": "Take Profit price type of the order.",
            "enum": [
              "ABSOLUTE",
              "OFFSET",
              "TRAILING_STOP_OFFSET"
            ]
          },
          "instrument": {
            "type": "string",
            "description": "Instrument name.",
            "example": "EURUSD"
          },
          "type": {
            "type": "string",
            "description": "Type of the order.",
            "enum": [
              "MANUAL",
              "MARKET",
              "STOP",
              "LIMIT",
              "STOP_LIMIT",
              "TRAILING_STOP"
            ]
          }
        },
        "required": [
          "accountId",
          "amount",
          "lotSize",
          "averageFilledPrice",
          "createdTime",
          "createdDateTime",
          "expireTime",
          "expireDateTime",
          "filledAmount",
          "orderId",
          "positionId",
          "price",
          "side",
          "slLimitPrice",
          "slPrice",
          "slPriceType",
          "status",
          "stopPrice",
          "tif",
          "tpPrice",
          "tpPriceType",
          "instrument",
          "type"
        ]
      },
      "OrderDataEnvelopeDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "accountId": {
                  "type": "string",
                  "description": "Account ID.",
                  "pattern": "^[LD]#[0-9]+$",
                  "example": "L#617289"
                },
                "amount": {
                  "type": "string",
                  "description": "Amount of the order."
                },
                "lotSize": {
                  "type": "string",
                  "description": "Units per lot.",
                  "example": "100000"
                },
                "averageFilledPrice": {
                  "type": "string",
                  "description": "Average filled price of the order.",
                  "nullable": true
                },
                "createdTime": {
                  "type": "number",
                  "deprecated": true,
                  "description": "Date of the order creation as UTC timestamp with milliseconds.",
                  "example": 1708696739441
                },
                "createdDateTime": {
                  "type": "string",
                  "description": "Date of the order creation in ISO date format.",
                  "example": "2021-06-01T12:00:00.000Z"
                },
                "expireTime": {
                  "type": "number",
                  "deprecated": true,
                  "description": "Date of the order expiration as UTC timestamp with milliseconds.",
                  "example": 1708696739441,
                  "nullable": true
                },
                "expireDateTime": {
                  "type": "string",
                  "description": "Date of the order creation in ISO date format.",
                  "example": "2021-06-01T12:00:00.000Z",
                  "nullable": true
                },
                "filledAmount": {
                  "type": "string",
                  "description": "Filled amount of the order.",
                  "format": "decimal"
                },
                "orderId": {
                  "type": "string",
                  "description": "ID of the order.",
                  "example": "72057594041239770"
                },
                "positionId": {
                  "type": "string",
                  "description": "ID of the position.",
                  "example": "72057594038933828",
                  "nullable": true
                },
                "price": {
                  "type": "string",
                  "description": "Price of the order."
                },
                "side": {
                  "type": "string",
                  "description": "Side of the order.",
                  "enum": [
                    "BUY",
                    "SELL",
                    "SHORT_SELL",
                    "BUY_TO_COVER"
                  ]
                },
                "slLimitPrice": {
                  "type": "string",
                  "description": "Stop Loss limit price of the order.",
                  "nullable": true
                },
                "slPrice": {
                  "type": "string",
                  "description": "Stop Loss price of the order.",
                  "nullable": true
                },
                "slPriceType": {
                  "type": "string",
                  "description": "Stop Loss price type of the order.",
                  "enum": [
                    "ABSOLUTE",
                    "OFFSET",
                    "TRAILING_STOP_OFFSET"
                  ]
                },
                "status": {
                  "type": "string",
                  "description": "Status of the order.",
                  "enum": [
                    "STATUS_NONE",
                    "STATUS_PENDING_NEW",
                    "STATUS_PENDING_EXECUTION",
                    "STATUS_PENDING_CANCEL",
                    "STATUS_PENDING_REPLACE",
                    "STATUS_PENDING_REPLACE_NOT_ACTIVE",
                    "STATUS_NEW",
                    "STATUS_ACCEPTED",
                    "STATUS_REPLACED",
                    "STATUS_PART_FILLED",
                    "STATUS_FILLED",
                    "STATUS_CANCELED",
                    "STATUS_REFUSED",
                    "STATUS_RESTATED",
                    "EXEC_TYPE_ACTIVATED",
                    "STATUS_WAITING_MARKET",
                    "STATUS_OFF_MARKET",
                    "STATUS_UNPLACED",
                    "STATUS_REMOVED",
                    "STATUS_MODIFY_TRADING_MODE"
                  ]
                },
                "stopPrice": {
                  "type": "string",
                  "description": "Stop price of the order.",
                  "nullable": true
                },
                "tif": {
                  "type": "string",
                  "description": "Time-in-force of the order.",
                  "enum": [
                    "DAY",
                    "GTC",
                    "IOC",
                    "GTD",
                    "FOK",
                    "MOO",
                    "MOC",
                    "GTS"
                  ]
                },
                "tpPrice": {
                  "type": "string",
                  "description": "Take Profit price of the order.",
                  "nullable": true
                },
                "tpPriceType": {
                  "type": "string",
                  "description": "Take Profit price type of the order.",
                  "enum": [
                    "ABSOLUTE",
                    "OFFSET",
                    "TRAILING_STOP_OFFSET"
                  ]
                },
                "instrument": {
                  "type": "string",
                  "description": "Instrument name.",
                  "example": "EURUSD"
                },
                "type": {
                  "type": "string",
                  "description": "Type of the order.",
                  "enum": [
                    "MANUAL",
                    "MARKET",
                    "STOP",
                    "LIMIT",
                    "STOP_LIMIT",
                    "TRAILING_STOP"
                  ]
                }
              },
              "required": [
                "accountId",
                "amount",
                "lotSize",
                "averageFilledPrice",
                "createdTime",
                "createdDateTime",
                "expireTime",
                "expireDateTime",
                "filledAmount",
                "orderId",
                "positionId",
                "price",
                "side",
                "slLimitPrice",
                "slPrice",
                "slPriceType",
                "status",
                "stopPrice",
                "tif",
                "tpPrice",
                "tpPriceType",
                "instrument",
                "type"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CancelOrderRequestDto": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "The ID of the order.",
            "example": "72057594041239756"
          },
          "type": {
            "type": "string",
            "description": "Type of the account to cancel the order for.",
            "enum": [
              "LIVE",
              "DEMO"
            ],
            "example": "LIVE"
          }
        },
        "required": [
          "orderId",
          "type"
        ]
      },
      "GetPositionsRequestDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of accounts to fetch the open positions for.",
            "enum": [
              "LIVE",
              "DEMO"
            ],
            "example": "LIVE"
          },
          "accountId": {
            "type": "string",
            "description": "Account ID.",
            "pattern": "^[LD]#[0-9]+$",
            "example": "L#617289"
          }
        },
        "required": [
          "type"
        ]
      },
      "PositionResponseDto": {
        "type": "object",
        "properties": {
          "positionId": {
            "type": "string",
            "description": "ID of the position.",
            "example": "72057594038933828"
          },
          "accountId": {
            "type": "string",
            "description": "Account ID.",
            "pattern": "^[LD]#[0-9]+$",
            "example": "L#617289"
          },
          "lots": {
            "type": "string",
            "description": "Position size expressed in lots.",
            "example": "0.01"
          },
          "lotSize": {
            "type": "string",
            "description": "Units per lot.",
            "example": "100000"
          },
          "units": {
            "type": "string",
            "description": "Position size expressed in units. units = lots * lotSize.",
            "example": "1000"
          },
          "openTime": {
            "type": "number",
            "deprecated": true,
            "description": "Date and time of the position open as UTC timestamp with milliseconds.",
            "example": 1708696739441
          },
          "openDateTime": {
            "type": "string",
            "description": "Date and time of the position open.",
            "example": "2021-06-01T12:00:00.000Z"
          },
          "pnl": {
            "type": "string",
            "description": "Profit & Loss.",
            "example": "200.12"
          },
          "swap": {
            "type": "string",
            "description": "Swap.",
            "example": "-13.08"
          },
          "slPrice": {
            "type": "string",
            "description": "Stop loss price.",
            "nullable": true,
            "example": "1.08166"
          },
          "tpPrice": {
            "type": "string",
            "description": "Take profit price.",
            "nullable": true,
            "example": "1.08318"
          },
          "openPrice": {
            "type": "string",
            "description": "Open price of the position.",
            "example": "1.0822"
          },
          "side": {
            "type": "string",
            "description": "Side of the position.",
            "enum": [
              "BUY",
              "SELL",
              "SHORT_SELL",
              "BUY_TO_COVER"
            ],
            "example": "BUY"
          },
          "instrument": {
            "type": "string",
            "description": "Instrument name.",
            "example": "EURUSD"
          }
        },
        "required": [
          "positionId",
          "accountId",
          "lots",
          "lotSize",
          "units",
          "openTime",
          "openDateTime",
          "pnl",
          "swap",
          "slPrice",
          "tpPrice",
          "openPrice",
          "side",
          "instrument"
        ]
      },
      "PositionDataEnvelopeDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "positionId": {
                  "type": "string",
                  "description": "ID of the position.",
                  "example": "72057594038933828"
                },
                "accountId": {
                  "type": "string",
                  "description": "Account ID.",
                  "pattern": "^[LD]#[0-9]+$",
                  "example": "L#617289"
                },
                "lots": {
                  "type": "string",
                  "description": "Position size expressed in lots.",
                  "example": "0.01"
                },
                "lotSize": {
                  "type": "string",
                  "description": "Units per lot.",
                  "example": "100000"
                },
                "units": {
                  "type": "string",
                  "description": "Position size expressed in units. units = lots * lotSize.",
                  "example": "1000"
                },
                "openTime": {
                  "type": "number",
                  "deprecated": true,
                  "description": "Date and time of the position open as UTC timestamp with milliseconds.",
                  "example": 1708696739441
                },
                "openDateTime": {
                  "type": "string",
                  "description": "Date and time of the position open.",
                  "example": "2021-06-01T12:00:00.000Z"
                },
                "pnl": {
                  "type": "string",
                  "description": "Profit & Loss.",
                  "example": "200.12"
                },
                "swap": {
                  "type": "string",
                  "description": "Swap.",
                  "example": "-13.08"
                },
                "slPrice": {
                  "type": "string",
                  "description": "Stop loss price.",
                  "nullable": true,
                  "example": "1.08166"
                },
                "tpPrice": {
                  "type": "string",
                  "description": "Take profit price.",
                  "nullable": true,
                  "example": "1.08318"
                },
                "openPrice": {
                  "type": "string",
                  "description": "Open price of the position.",
                  "example": "1.0822"
                },
                "side": {
                  "type": "string",
                  "description": "Side of the position.",
                  "enum": [
                    "BUY",
                    "SELL",
                    "SHORT_SELL",
                    "BUY_TO_COVER"
                  ],
                  "example": "BUY"
                },
                "instrument": {
                  "type": "string",
                  "description": "Instrument name.",
                  "example": "EURUSD"
                }
              },
              "required": [
                "positionId",
                "accountId",
                "lots",
                "lotSize",
                "units",
                "openTime",
                "openDateTime",
                "pnl",
                "swap",
                "slPrice",
                "tpPrice",
                "openPrice",
                "side",
                "instrument"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ClosePositionRequestDto": {
        "type": "object",
        "properties": {
          "positionId": {
            "type": "string",
            "description": "ID of the position."
          },
          "type": {
            "type": "string",
            "description": "Type of the account to close the position for.",
            "enum": [
              "LIVE",
              "DEMO"
            ],
            "example": "LIVE"
          }
        },
        "required": [
          "positionId",
          "type"
        ]
      },
      "AccountStatementReportRequestDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of accounts to fetch.",
            "enum": [
              "LIVE",
              "DEMO"
            ],
            "example": "LIVE"
          },
          "accountIds": {
            "type": "array",
            "description": "Account IDs to fetch.",
            "items": {
              "type": "string",
              "example": "L#123456"
            }
          },
          "accountStatus": {
            "type": "string",
            "description": "Status of accounts to fetch.",
            "enum": [
              "ACTIVE",
              "RESTRICTED",
              "SUSPENDED"
            ],
            "example": "ACTIVE"
          }
        },
        "required": [
          "type"
        ]
      },
      "AccountStatementReportRowDto": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "Account ID.",
            "pattern": "^[LD]#[0-9]+$",
            "example": "L#617289"
          },
          "balance": {
            "type": "string",
            "description": "Current account balance.",
            "example": "9838.32"
          },
          "credit": {
            "type": "string",
            "description": "Current account credit.",
            "example": "100.00"
          },
          "equity": {
            "type": "string",
            "description": "Current account equity.",
            "example": "10365.11"
          },
          "pnl": {
            "type": "string",
            "description": "Current account profit & loss.",
            "example": "426.79"
          },
          "marginUsed": {
            "type": "string",
            "description": "Current account used margin.",
            "example": "6033.21"
          },
          "marginAvailable": {
            "type": "string",
            "description": "Current account available margin.",
            "example": "3905.10"
          },
          "userGroupId": {
            "type": "string",
            "description": "User group ID of the account.",
            "example": "618566"
          }
        },
        "required": [
          "accountId",
          "balance",
          "credit",
          "equity",
          "pnl",
          "marginUsed",
          "marginAvailable",
          "userGroupId"
        ]
      },
      "AccountStatementReportDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "accountId": {
                  "type": "string",
                  "description": "Account ID.",
                  "pattern": "^[LD]#[0-9]+$",
                  "example": "L#617289"
                },
                "balance": {
                  "type": "string",
                  "description": "Current account balance.",
                  "example": "9838.32"
                },
                "credit": {
                  "type": "string",
                  "description": "Current account credit.",
                  "example": "100.00"
                },
                "equity": {
                  "type": "string",
                  "description": "Current account equity.",
                  "example": "10365.11"
                },
                "pnl": {
                  "type": "string",
                  "description": "Current account profit & loss.",
                  "example": "426.79"
                },
                "marginUsed": {
                  "type": "string",
                  "description": "Current account used margin.",
                  "example": "6033.21"
                },
                "marginAvailable": {
                  "type": "string",
                  "description": "Current account available margin.",
                  "example": "3905.10"
                },
                "userGroupId": {
                  "type": "string",
                  "description": "User group ID of the account.",
                  "example": "618566"
                }
              },
              "required": [
                "accountId",
                "balance",
                "credit",
                "equity",
                "pnl",
                "marginUsed",
                "marginAvailable",
                "userGroupId"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "TradesHistoryReportRequestDto": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "number",
            "deprecated": true,
            "description": "Start time in milliseconds since epoch.",
            "format": "int64",
            "minimum": 1575072000000,
            "example": 1709190470483
          },
          "startDateTime": {
            "type": "string",
            "description": "Start time in ISO format.",
            "example": "2021-12-31T23:59:59.999Z"
          },
          "endTime": {
            "type": "number",
            "deprecated": true,
            "description": "End time in milliseconds since epoch.",
            "format": "int64",
            "minimum": 1575072000000,
            "example": 1709192495319
          },
          "endDateTime": {
            "type": "string",
            "description": "End time",
            "example": "2021-12-31T23:59:59.999Z"
          },
          "type": {
            "type": "string",
            "description": "Type of accounts to fetch the trades history for.",
            "enum": [
              "LIVE",
              "DEMO"
            ],
            "example": "LIVE"
          },
          "accountId": {
            "type": "string",
            "description": "Account ID.",
            "pattern": "^[LD]#[0-9]+$",
            "example": "L#617289"
          },
          "enableSLTP": {
            "type": "boolean",
            "description": "Enable or disable `stopLoss`, `stopLossLimit`, `takeProfit` from response. Disabling SLTP may result in faster response time.",
            "example": false,
            "default": true
          }
        },
        "required": [
          "type"
        ]
      },
      "TradesHistoryReportRowDto": {
        "type": "object",
        "properties": {
          "tradeId": {
            "type": "string",
            "description": "Trade ID",
            "example": "72057594039813847"
          },
          "orderId": {
            "type": "string",
            "description": "Order ID",
            "example": "72057594041242672"
          },
          "accountId": {
            "type": "string",
            "description": "Account ID.",
            "pattern": "^[LD]#[0-9]+$",
            "example": "L#617289"
          },
          "side": {
            "type": "string",
            "description": "Side of the trade",
            "example": "BUY",
            "enum": [
              "BUY",
              "SELL"
            ]
          },
          "orderType": {
            "type": "string",
            "description": "Order type",
            "example": "MARKET",
            "enum": [
              "MARKET",
              "PROTECTIVE_STOP",
              "STOP_LOSS",
              "STOP",
              "STOP_OUT",
              "PROTECTIVE_LIMIT",
              "TAKE_PROFIT",
              "LIMIT",
              "STOP_LIMIT",
              "TRAILING_STOP_LOSS",
              "TRAILING_STOP"
            ]
          },
          "positionStatus": {
            "type": "string",
            "description": "Position status",
            "example": "CLOSE",
            "enum": [
              "CLOSE",
              "OPEN",
              "INCREASE",
              "DECREASE"
            ]
          },
          "tradeTime": {
            "type": "number",
            "deprecated": true,
            "description": "Trade time in milliseconds since Unix epoch",
            "example": 1709122885502
          },
          "tradeDateTime": {
            "type": "string",
            "description": "Trade time in ISO format",
            "example": "2021-12-31T23:59:59.999Z"
          },
          "price": {
            "type": "string",
            "description": "Price",
            "example": "3467.73"
          },
          "lots": {
            "type": "string",
            "description": "Amount in lots",
            "example": "0.01"
          },
          "instrument": {
            "type": "string",
            "description": "Instrument name",
            "example": "EURUSD"
          },
          "positionId": {
            "type": "string",
            "description": "Position ID",
            "example": "72057594038936231"
          },
          "pnl": {
            "type": "string",
            "description": "Profit and loss.",
            "example": "200.12"
          },
          "executionFee": {
            "type": "string",
            "description": "Execution fee",
            "example": "3.13"
          },
          "stopLoss": {
            "type": "string",
            "description": "Stop loss price",
            "example": "100.13",
            "nullable": true
          },
          "stopLossLimit": {
            "type": "string",
            "description": "Stop loss limit price",
            "example": "100.13",
            "nullable": true
          },
          "takeProfit": {
            "type": "string",
            "description": "Take profit price",
            "example": "100.13",
            "nullable": true
          },
          "userGroupId": {
            "type": "string",
            "description": "User group ID of the account.",
            "example": "618566"
          }
        },
        "required": [
          "tradeId",
          "orderId",
          "accountId",
          "side",
          "orderType",
          "positionStatus",
          "tradeTime",
          "tradeDateTime",
          "price",
          "lots",
          "instrument",
          "positionId",
          "pnl",
          "executionFee",
          "stopLoss",
          "stopLossLimit",
          "takeProfit",
          "userGroupId"
        ]
      },
      "TradesHistoryReportDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "tradeId": {
                  "type": "string",
                  "description": "Trade ID",
                  "example": "72057594039813847"
                },
                "orderId": {
                  "type": "string",
                  "description": "Order ID",
                  "example": "72057594041242672"
                },
                "accountId": {
                  "type": "string",
                  "description": "Account ID.",
                  "pattern": "^[LD]#[0-9]+$",
                  "example": "L#617289"
                },
                "side": {
                  "type": "string",
                  "description": "Side of the trade",
                  "example": "BUY",
                  "enum": [
                    "BUY",
                    "SELL"
                  ]
                },
                "orderType": {
                  "type": "string",
                  "description": "Order type",
                  "example": "MARKET",
                  "enum": [
                    "MARKET",
                    "PROTECTIVE_STOP",
                    "STOP_LOSS",
                    "STOP",
                    "STOP_OUT",
                    "PROTECTIVE_LIMIT",
                    "TAKE_PROFIT",
                    "LIMIT",
                    "STOP_LIMIT",
                    "TRAILING_STOP_LOSS",
                    "TRAILING_STOP"
                  ]
                },
                "positionStatus": {
                  "type": "string",
                  "description": "Position status",
                  "example": "CLOSE",
                  "enum": [
                    "CLOSE",
                    "OPEN",
                    "INCREASE",
                    "DECREASE"
                  ]
                },
                "tradeTime": {
                  "type": "number",
                  "deprecated": true,
                  "description": "Trade time in milliseconds since Unix epoch",
                  "example": 1709122885502
                },
                "tradeDateTime": {
                  "type": "string",
                  "description": "Trade time in ISO format",
                  "example": "2021-12-31T23:59:59.999Z"
                },
                "price": {
                  "type": "string",
                  "description": "Price",
                  "example": "3467.73"
                },
                "lots": {
                  "type": "string",
                  "description": "Amount in lots",
                  "example": "0.01"
                },
                "instrument": {
                  "type": "string",
                  "description": "Instrument name",
                  "example": "EURUSD"
                },
                "positionId": {
                  "type": "string",
                  "description": "Position ID",
                  "example": "72057594038936231"
                },
                "pnl": {
                  "type": "string",
                  "description": "Profit and loss.",
                  "example": "200.12"
                },
                "executionFee": {
                  "type": "string",
                  "description": "Execution fee",
                  "example": "3.13"
                },
                "stopLoss": {
                  "type": "string",
                  "description": "Stop loss price",
                  "example": "100.13",
                  "nullable": true
                },
                "stopLossLimit": {
                  "type": "string",
                  "description": "Stop loss limit price",
                  "example": "100.13",
                  "nullable": true
                },
                "takeProfit": {
                  "type": "string",
                  "description": "Take profit price",
                  "example": "100.13",
                  "nullable": true
                },
                "userGroupId": {
                  "type": "string",
                  "description": "User group ID of the account.",
                  "example": "618566"
                }
              },
              "required": [
                "tradeId",
                "orderId",
                "accountId",
                "side",
                "orderType",
                "positionStatus",
                "tradeTime",
                "tradeDateTime",
                "price",
                "lots",
                "instrument",
                "positionId",
                "pnl",
                "executionFee",
                "stopLoss",
                "stopLossLimit",
                "takeProfit",
                "userGroupId"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CloseTradesReportRequestDto": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "Account ID.",
            "pattern": "^[LD]#[0-9]+$",
            "example": "L#617289"
          },
          "type": {
            "type": "string",
            "description": "Type of accounts to fetch the close trades events.",
            "enum": [
              "LIVE",
              "DEMO"
            ],
            "example": "LIVE"
          },
          "cursor": {
            "type": "string",
            "description": "Cursor to fetch the next page of events. If not provided, the first page of events will be returned. Must be an integer string, greater than or equal to 0 and less than or equal to 9223372036854775807",
            "format": "integer",
            "example": "72057594039889417"
          },
          "limit": {
            "type": "string",
            "format": "number",
            "description": "Page size; max 1000, default 20."
          }
        },
        "required": [
          "accountId",
          "type"
        ]
      },
      "CloseTradeReportRowDto": {
        "type": "object",
        "properties": {
          "instrument": {
            "type": "string",
            "format": "number"
          },
          "openMilliseconds": {
            "type": "string",
            "format": "number",
            "description": "Time of the order open in milliseconds."
          },
          "openDateTime": {
            "type": "string",
            "format": "isodate",
            "description": "DateTime of the order open in ISO date string."
          },
          "orderType": {
            "type": "string",
            "enum": [
              "Market",
              "Protective stop",
              "Stop loss",
              "Stop",
              "Stop Out",
              "Protective limit",
              "Take profit",
              "Limit",
              "Stop Limit",
              "Trailing Stop Loss",
              "Trailing Stop"
            ]
          },
          "positionSide": {
            "type": "string",
            "enum": [
              "Buy",
              "Sell"
            ]
          },
          "closeAmount": {
            "type": "string",
            "format": "number"
          },
          "averageOpenPrice": {
            "type": "string",
            "format": "number"
          },
          "closePrice": {
            "type": "string",
            "format": "number"
          },
          "closeMilliseconds": {
            "type": "string",
            "format": "number",
            "description": "Time of the order close in milliseconds."
          },
          "closeDateTime": {
            "type": "string",
            "format": "isodate",
            "description": "DateTime of the order close in ISO date string."
          },
          "openAmount": {
            "type": "string",
            "format": "number"
          },
          "closeTradeId": {
            "type": "string",
            "format": "number"
          },
          "openTradeId": {
            "type": "string",
            "format": "number"
          },
          "closeOrderId": {
            "type": "string",
            "format": "number"
          },
          "positionId": {
            "type": "string",
            "format": "number"
          },
          "openOrderId": {
            "type": "string",
            "format": "number"
          },
          "strategyId": {
            "type": "string",
            "nullable": true
          },
          "slPrice": {
            "type": "string",
            "format": "number",
            "nullable": true
          },
          "slOrderType": {
            "type": "string",
            "enum": [
              "STOP",
              "STOP_LIMIT",
              "TRAILING_STOP"
            ],
            "nullable": true
          },
          "slTrailingOffset": {
            "type": "string",
            "format": "number",
            "nullable": true
          },
          "tpPrice": {
            "type": "string",
            "format": "number",
            "nullable": true
          },
          "commission": {
            "type": "string",
            "format": "number"
          },
          "swap": {
            "type": "string",
            "format": "number"
          },
          "profit": {
            "type": "string",
            "format": "number"
          },
          "netProfit": {
            "type": "string",
            "format": "number"
          }
        },
        "required": [
          "instrument",
          "openMilliseconds",
          "openDateTime",
          "orderType",
          "positionSide",
          "closeAmount",
          "averageOpenPrice",
          "closePrice",
          "closeMilliseconds",
          "closeDateTime",
          "openAmount",
          "closeTradeId",
          "openTradeId",
          "closeOrderId",
          "positionId",
          "openOrderId",
          "strategyId",
          "slPrice",
          "slOrderType",
          "slTrailingOffset",
          "tpPrice",
          "commission",
          "swap",
          "profit",
          "netProfit"
        ]
      },
      "PaginationLinkObjectDto": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "url",
            "nullable": true
          },
          "params": {
            "type": "object",
            "nullable": true
          }
        },
        "required": [
          "url",
          "params"
        ]
      },
      "PaginationLinksDto": {
        "type": "object",
        "properties": {
          "next": {
            "nullable": true,
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "format": "url",
                    "nullable": true
                  },
                  "params": {
                    "type": "object",
                    "nullable": true
                  }
                },
                "required": [
                  "url",
                  "params"
                ]
              }
            ]
          }
        },
        "required": [
          "next"
        ]
      },
      "CloseTradesReportDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "instrument": {
                  "type": "string",
                  "format": "number"
                },
                "openMilliseconds": {
                  "type": "string",
                  "format": "number",
                  "description": "Time of the order open in milliseconds."
                },
                "openDateTime": {
                  "type": "string",
                  "format": "isodate",
                  "description": "DateTime of the order open in ISO date string."
                },
                "orderType": {
                  "type": "string",
                  "enum": [
                    "Market",
                    "Protective stop",
                    "Stop loss",
                    "Stop",
                    "Stop Out",
                    "Protective limit",
                    "Take profit",
                    "Limit",
                    "Stop Limit",
                    "Trailing Stop Loss",
                    "Trailing Stop"
                  ]
                },
                "positionSide": {
                  "type": "string",
                  "enum": [
                    "Buy",
                    "Sell"
                  ]
                },
                "closeAmount": {
                  "type": "string",
                  "format": "number"
                },
                "averageOpenPrice": {
                  "type": "string",
                  "format": "number"
                },
                "closePrice": {
                  "type": "string",
                  "format": "number"
                },
                "closeMilliseconds": {
                  "type": "string",
                  "format": "number",
                  "description": "Time of the order close in milliseconds."
                },
                "closeDateTime": {
                  "type": "string",
                  "format": "isodate",
                  "description": "DateTime of the order close in ISO date string."
                },
                "openAmount": {
                  "type": "string",
                  "format": "number"
                },
                "closeTradeId": {
                  "type": "string",
                  "format": "number"
                },
                "openTradeId": {
                  "type": "string",
                  "format": "number"
                },
                "closeOrderId": {
                  "type": "string",
                  "format": "number"
                },
                "positionId": {
                  "type": "string",
                  "format": "number"
                },
                "openOrderId": {
                  "type": "string",
                  "format": "number"
                },
                "strategyId": {
                  "type": "string",
                  "nullable": true
                },
                "slPrice": {
                  "type": "string",
                  "format": "number",
                  "nullable": true
                },
                "slOrderType": {
                  "type": "string",
                  "enum": [
                    "STOP",
                    "STOP_LIMIT",
                    "TRAILING_STOP"
                  ],
                  "nullable": true
                },
                "slTrailingOffset": {
                  "type": "string",
                  "format": "number",
                  "nullable": true
                },
                "tpPrice": {
                  "type": "string",
                  "format": "number",
                  "nullable": true
                },
                "commission": {
                  "type": "string",
                  "format": "number"
                },
                "swap": {
                  "type": "string",
                  "format": "number"
                },
                "profit": {
                  "type": "string",
                  "format": "number"
                },
                "netProfit": {
                  "type": "string",
                  "format": "number"
                }
              },
              "required": [
                "instrument",
                "openMilliseconds",
                "openDateTime",
                "orderType",
                "positionSide",
                "closeAmount",
                "averageOpenPrice",
                "closePrice",
                "closeMilliseconds",
                "closeDateTime",
                "openAmount",
                "closeTradeId",
                "openTradeId",
                "closeOrderId",
                "positionId",
                "openOrderId",
                "strategyId",
                "slPrice",
                "slOrderType",
                "slTrailingOffset",
                "tpPrice",
                "commission",
                "swap",
                "profit",
                "netProfit"
              ]
            }
          },
          "links": {
            "example": {
              "next": {
                "url": null,
                "params": {
                  "accNum": "1",
                  "lastTradeId": "123456789"
                }
              }
            },
            "description": "Links to the next page of the report. Use `params` for the next page URL search params.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "next": {
                    "nullable": true,
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "url": {
                            "type": "string",
                            "format": "url",
                            "nullable": true
                          },
                          "params": {
                            "type": "object",
                            "nullable": true
                          }
                        },
                        "required": [
                          "url",
                          "params"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "next"
                ]
              }
            ]
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "UsersActivitiesReportRequestDto": {
        "type": "object",
        "properties": {
          "startDateTime": {
            "type": "string",
            "description": "Start time in ISO format.",
            "example": "2021-12-31T23:59:59.999Z"
          },
          "endDateTime": {
            "type": "string",
            "description": "End time in ISO format.",
            "example": "2021-12-31T23:59:59.999Z"
          },
          "type": {
            "type": "string",
            "description": "Type of accounts to include in the report.",
            "enum": [
              "LIVE",
              "DEMO"
            ],
            "example": "LIVE"
          }
        },
        "required": [
          "startDateTime",
          "endDateTime",
          "type"
        ]
      },
      "UsersActivitiesReportRawDto": {
        "type": "object",
        "properties": {
          "ipAddress": {
            "type": "string",
            "description": "IP address of the user",
            "example": "3600:100e:b31c:3d8d:2900:59d6:aaca:e74e"
          },
          "userId": {
            "type": "string",
            "description": "Unique identifier of the user",
            "example": "56f18b48-8ad0-4573-a9c1-d3f3e2992f46"
          },
          "deviceId": {
            "type": "string",
            "description": "Unique identifier of the device",
            "example": "27c86721-76e8-4100-aa23-1f0b04c251a4"
          },
          "firstSeen": {
            "type": "number",
            "description": "First seen in milliseconds since Unix epoch",
            "example": 1709122885502
          },
          "firstSeenISO": {
            "type": "string",
            "description": "First seen as an ISO 8601 string",
            "example": "2024-09-27T20:46:11.666Z"
          },
          "lastSeen": {
            "type": "number",
            "description": "Last seen in milliseconds since Unix epoch",
            "example": 1709122885510
          },
          "lastSeenISO": {
            "type": "string",
            "description": "Last seen as an ISO 8601 string",
            "example": "2024-09-27T20:46:11.666Z"
          },
          "country": {
            "type": "string",
            "description": "Country of the user",
            "example": "United States"
          },
          "city": {
            "type": "string",
            "description": "City of the user",
            "example": "New York"
          },
          "region": {
            "type": "string",
            "description": "Region of the user",
            "example": "New York"
          },
          "platform": {
            "type": "string",
            "description": "Platform of the user",
            "example": "Web"
          },
          "osName": {
            "type": "string",
            "description": "Operation System of the user",
            "example": "Chrome"
          },
          "osVersion": {
            "type": "string",
            "description": "Operation System version of the user",
            "example": "109"
          },
          "deviceFamily": {
            "type": "string",
            "description": "Device family of the user",
            "example": "Google Phone"
          },
          "deviceType": {
            "type": "string",
            "description": "City of the user",
            "example": "Google Pixel 6 Pro"
          }
        },
        "required": [
          "ipAddress",
          "userId",
          "deviceId",
          "firstSeen",
          "firstSeenISO",
          "lastSeen",
          "lastSeenISO",
          "country",
          "city",
          "region",
          "platform",
          "osName",
          "osVersion",
          "deviceFamily",
          "deviceType"
        ]
      },
      "UsersActivitiesReportDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "ipAddress": {
                  "type": "string",
                  "description": "IP address of the user",
                  "example": "3600:100e:b31c:3d8d:2900:59d6:aaca:e74e"
                },
                "userId": {
                  "type": "string",
                  "description": "Unique identifier of the user",
                  "example": "56f18b48-8ad0-4573-a9c1-d3f3e2992f46"
                },
                "deviceId": {
                  "type": "string",
                  "description": "Unique identifier of the device",
                  "example": "27c86721-76e8-4100-aa23-1f0b04c251a4"
                },
                "firstSeen": {
                  "type": "number",
                  "description": "First seen in milliseconds since Unix epoch",
                  "example": 1709122885502
                },
                "firstSeenISO": {
                  "type": "string",
                  "description": "First seen as an ISO 8601 string",
                  "example": "2024-09-27T20:46:11.666Z"
                },
                "lastSeen": {
                  "type": "number",
                  "description": "Last seen in milliseconds since Unix epoch",
                  "example": 1709122885510
                },
                "lastSeenISO": {
                  "type": "string",
                  "description": "Last seen as an ISO 8601 string",
                  "example": "2024-09-27T20:46:11.666Z"
                },
                "country": {
                  "type": "string",
                  "description": "Country of the user",
                  "example": "United States"
                },
                "city": {
                  "type": "string",
                  "description": "City of the user",
                  "example": "New York"
                },
                "region": {
                  "type": "string",
                  "description": "Region of the user",
                  "example": "New York"
                },
                "platform": {
                  "type": "string",
                  "description": "Platform of the user",
                  "example": "Web"
                },
                "osName": {
                  "type": "string",
                  "description": "Operation System of the user",
                  "example": "Chrome"
                },
                "osVersion": {
                  "type": "string",
                  "description": "Operation System version of the user",
                  "example": "109"
                },
                "deviceFamily": {
                  "type": "string",
                  "description": "Device family of the user",
                  "example": "Google Phone"
                },
                "deviceType": {
                  "type": "string",
                  "description": "City of the user",
                  "example": "Google Pixel 6 Pro"
                }
              },
              "required": [
                "ipAddress",
                "userId",
                "deviceId",
                "firstSeen",
                "firstSeenISO",
                "lastSeen",
                "lastSeenISO",
                "country",
                "city",
                "region",
                "platform",
                "osName",
                "osVersion",
                "deviceFamily",
                "deviceType"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountOperationsHistoryReportRequestDto": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "Account ID.",
            "pattern": "^[LD]#[0-9]+$",
            "example": "L#617289"
          },
          "type": {
            "type": "string",
            "description": "Type of accounts to fetch the close trades events.",
            "enum": [
              "LIVE",
              "DEMO"
            ],
            "example": "LIVE"
          },
          "startDateTime": {
            "type": "string",
            "description": "Start time in ISO format.",
            "example": "2021-12-31T23:59:59.999Z"
          },
          "endDateTime": {
            "type": "string",
            "description": "End time in ISO format.",
            "example": "2021-12-31T23:59:59.999Z"
          },
          "operationTypes": {
            "type": "array",
            "description": "Array of operation type strings",
            "items": {
              "type": "string",
              "enum": [
                "TRADING",
                "DEPOSIT",
                "WITHDRAW",
                "COMMISSION",
                "SWAP",
                "BLOCKING",
                "UNBLOCKING",
                "ADJUSTMENT",
                "SPREAD",
                "CREDIT",
                "BALANCE_CREDIT"
              ]
            }
          }
        },
        "required": [
          "accountId",
          "type",
          "startDateTime",
          "endDateTime"
        ]
      },
      "AccountOperationsHistoryReportRowDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "number"
          },
          "dateTime": {
            "type": "string",
            "description": "Date time in ISO format.",
            "example": "2021-12-31T23:59:59.999Z"
          },
          "operationTypeId": {
            "type": "string",
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "7",
              "8",
              "12",
              "18",
              "19",
              "100"
            ],
            "description": "The id of the operation type."
          },
          "operationTypeName": {
            "type": "string",
            "enum": [
              "TRADING",
              "DEPOSIT",
              "WITHDRAW",
              "COMMISSION",
              "SWAP",
              "BLOCKING",
              "UNBLOCKING",
              "ADJUSTMENT",
              "SPREAD",
              "CREDIT",
              "BALANCE_CREDIT"
            ],
            "description": "The name of the operation type."
          },
          "balanceChange": {
            "type": "string",
            "format": "number"
          },
          "resultingBalance": {
            "type": "string",
            "format": "number"
          },
          "amount": {
            "type": "string",
            "format": "number",
            "nullable": true
          }
        },
        "required": [
          "id",
          "dateTime",
          "operationTypeId",
          "operationTypeName",
          "balanceChange",
          "resultingBalance",
          "amount"
        ]
      },
      "AccountOperationsHistoryReportDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "number"
                },
                "dateTime": {
                  "type": "string",
                  "description": "Date time in ISO format.",
                  "example": "2021-12-31T23:59:59.999Z"
                },
                "operationTypeId": {
                  "type": "string",
                  "enum": [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "7",
                    "8",
                    "12",
                    "18",
                    "19",
                    "100"
                  ],
                  "description": "The id of the operation type."
                },
                "operationTypeName": {
                  "type": "string",
                  "enum": [
                    "TRADING",
                    "DEPOSIT",
                    "WITHDRAW",
                    "COMMISSION",
                    "SWAP",
                    "BLOCKING",
                    "UNBLOCKING",
                    "ADJUSTMENT",
                    "SPREAD",
                    "CREDIT",
                    "BALANCE_CREDIT"
                  ],
                  "description": "The name of the operation type."
                },
                "balanceChange": {
                  "type": "string",
                  "format": "number"
                },
                "resultingBalance": {
                  "type": "string",
                  "format": "number"
                },
                "amount": {
                  "type": "string",
                  "format": "number",
                  "nullable": true
                }
              },
              "required": [
                "id",
                "dateTime",
                "operationTypeId",
                "operationTypeName",
                "balanceChange",
                "resultingBalance",
                "amount"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GetGroupsRequestDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of account environment to fetch the available groups for.",
            "enum": [
              "LIVE",
              "DEMO"
            ],
            "example": "LIVE"
          }
        },
        "required": [
          "type"
        ]
      },
      "GroupDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the group.",
            "example": "27495"
          },
          "name": {
            "type": "string",
            "description": "The name of the group.",
            "example": "FXBR-GEN"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "GroupDataEnvelopeDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID of the group.",
                  "example": "27495"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the group.",
                  "example": "FXBR-GEN"
                }
              },
              "required": [
                "id",
                "name"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      }
    }
  },
  "security": [
    {
      "api-key": []
    }
  ]
}